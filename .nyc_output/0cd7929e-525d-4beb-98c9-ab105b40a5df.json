{"/home/dauliac/Workspace/koleg/api/tests/domain/main.test.ts":{"path":"/home/dauliac/Workspace/koleg/api/tests/domain/main.test.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":23},"end":{"line":3,"column":48}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":48}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":22},"end":{"line":6,"column":46}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":36}},"6":{"start":{"line":8,"column":14},"end":{"line":8,"column":30}},"7":{"start":{"line":9,"column":16},"end":{"line":9,"column":34}},"8":{"start":{"line":10,"column":15},"end":{"line":10,"column":32}},"9":{"start":{"line":11,"column":0},"end":{"line":27,"column":3}},"10":{"start":{"line":12,"column":4},"end":{"line":26,"column":7}},"11":{"start":{"line":13,"column":8},"end":{"line":25,"column":11}},"12":{"start":{"line":14,"column":12},"end":{"line":23,"column":13}},"13":{"start":{"line":15,"column":37},"end":{"line":15,"column":69}},"14":{"start":{"line":16,"column":16},"end":{"line":19,"column":17}},"15":{"start":{"line":17,"column":32},"end":{"line":17,"column":68}},"16":{"start":{"line":18,"column":20},"end":{"line":18,"column":30}},"17":{"start":{"line":22,"column":16},"end":{"line":22,"column":26}},"18":{"start":{"line":24,"column":12},"end":{"line":24,"column":19}},"19":{"start":{"line":28,"column":0},"end":{"line":39,"column":3}},"20":{"start":{"line":29,"column":4},"end":{"line":38,"column":7}},"21":{"start":{"line":30,"column":8},"end":{"line":37,"column":11}},"22":{"start":{"line":31,"column":29},"end":{"line":31,"column":61}},"23":{"start":{"line":32,"column":12},"end":{"line":35,"column":13}},"24":{"start":{"line":33,"column":28},"end":{"line":33,"column":56}},"25":{"start":{"line":34,"column":16},"end":{"line":34,"column":26}},"26":{"start":{"line":36,"column":12},"end":{"line":36,"column":19}},"27":{"start":{"line":40,"column":0},"end":{"line":52,"column":3}},"28":{"start":{"line":41,"column":4},"end":{"line":51,"column":7}},"29":{"start":{"line":42,"column":8},"end":{"line":50,"column":11}},"30":{"start":{"line":43,"column":12},"end":{"line":48,"column":13}},"31":{"start":{"line":44,"column":47},"end":{"line":44,"column":71}},"32":{"start":{"line":47,"column":16},"end":{"line":47,"column":26}},"33":{"start":{"line":49,"column":12},"end":{"line":49,"column":19}},"34":{"start":{"line":53,"column":0},"end":{"line":65,"column":3}},"35":{"start":{"line":54,"column":4},"end":{"line":64,"column":7}},"36":{"start":{"line":55,"column":8},"end":{"line":63,"column":11}},"37":{"start":{"line":56,"column":12},"end":{"line":61,"column":13}},"38":{"start":{"line":57,"column":28},"end":{"line":57,"column":42}},"39":{"start":{"line":60,"column":16},"end":{"line":60,"column":26}},"40":{"start":{"line":62,"column":12},"end":{"line":62,"column":19}},"41":{"start":{"line":66,"column":0},"end":{"line":83,"column":3}},"42":{"start":{"line":67,"column":4},"end":{"line":82,"column":7}},"43":{"start":{"line":68,"column":8},"end":{"line":81,"column":11}},"44":{"start":{"line":69,"column":12},"end":{"line":79,"column":13}},"45":{"start":{"line":70,"column":37},"end":{"line":70,"column":69}},"46":{"start":{"line":71,"column":32},"end":{"line":71,"column":64}},"47":{"start":{"line":72,"column":16},"end":{"line":75,"column":17}},"48":{"start":{"line":73,"column":32},"end":{"line":73,"column":70}},"49":{"start":{"line":74,"column":20},"end":{"line":74,"column":30}},"50":{"start":{"line":78,"column":16},"end":{"line":78,"column":26}},"51":{"start":{"line":80,"column":12},"end":{"line":80,"column":19}},"52":{"start":{"line":84,"column":0},"end":{"line":103,"column":3}},"53":{"start":{"line":85,"column":4},"end":{"line":102,"column":7}},"54":{"start":{"line":86,"column":8},"end":{"line":101,"column":11}},"55":{"start":{"line":87,"column":12},"end":{"line":99,"column":13}},"56":{"start":{"line":88,"column":37},"end":{"line":88,"column":69}},"57":{"start":{"line":89,"column":38},"end":{"line":89,"column":70}},"58":{"start":{"line":90,"column":37},"end":{"line":90,"column":84}},"59":{"start":{"line":91,"column":16},"end":{"line":95,"column":17}},"60":{"start":{"line":93,"column":32},"end":{"line":93,"column":70}},"61":{"start":{"line":94,"column":20},"end":{"line":94,"column":30}},"62":{"start":{"line":98,"column":16},"end":{"line":98,"column":26}},"63":{"start":{"line":100,"column":12},"end":{"line":100,"column":19}},"64":{"start":{"line":104,"column":0},"end":{"line":116,"column":3}},"65":{"start":{"line":105,"column":4},"end":{"line":115,"column":7}},"66":{"start":{"line":106,"column":8},"end":{"line":114,"column":11}},"67":{"start":{"line":107,"column":12},"end":{"line":112,"column":13}},"68":{"start":{"line":108,"column":31},"end":{"line":108,"column":51}},"69":{"start":{"line":111,"column":16},"end":{"line":111,"column":26}},"70":{"start":{"line":113,"column":12},"end":{"line":113,"column":19}},"71":{"start":{"line":117,"column":0},"end":{"line":129,"column":3}},"72":{"start":{"line":118,"column":4},"end":{"line":128,"column":7}},"73":{"start":{"line":119,"column":8},"end":{"line":127,"column":11}},"74":{"start":{"line":120,"column":12},"end":{"line":125,"column":13}},"75":{"start":{"line":121,"column":36},"end":{"line":121,"column":66}},"76":{"start":{"line":124,"column":16},"end":{"line":124,"column":26}},"77":{"start":{"line":126,"column":12},"end":{"line":126,"column":19}},"78":{"start":{"line":130,"column":0},"end":{"line":147,"column":3}},"79":{"start":{"line":131,"column":4},"end":{"line":146,"column":7}},"80":{"start":{"line":132,"column":8},"end":{"line":145,"column":11}},"81":{"start":{"line":133,"column":12},"end":{"line":143,"column":13}},"82":{"start":{"line":134,"column":37},"end":{"line":134,"column":69}},"83":{"start":{"line":135,"column":31},"end":{"line":135,"column":61}},"84":{"start":{"line":136,"column":16},"end":{"line":139,"column":17}},"85":{"start":{"line":137,"column":32},"end":{"line":137,"column":69}},"86":{"start":{"line":138,"column":20},"end":{"line":138,"column":30}},"87":{"start":{"line":142,"column":16},"end":{"line":142,"column":26}},"88":{"start":{"line":144,"column":12},"end":{"line":144,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":25},"end":{"line":11,"column":26}},"loc":{"start":{"line":11,"column":31},"end":{"line":27,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":24},"end":{"line":12,"column":25}},"loc":{"start":{"line":12,"column":30},"end":{"line":26,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":46},"end":{"line":13,"column":47}},"loc":{"start":{"line":13,"column":56},"end":{"line":25,"column":9}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":21},"end":{"line":28,"column":22}},"loc":{"start":{"line":28,"column":27},"end":{"line":39,"column":1}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":24},"end":{"line":29,"column":25}},"loc":{"start":{"line":29,"column":30},"end":{"line":38,"column":5}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":46},"end":{"line":30,"column":47}},"loc":{"start":{"line":30,"column":56},"end":{"line":37,"column":9}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":40,"column":21},"end":{"line":40,"column":22}},"loc":{"start":{"line":40,"column":27},"end":{"line":52,"column":1}},"line":40},"7":{"name":"(anonymous_7)","decl":{"start":{"line":41,"column":24},"end":{"line":41,"column":25}},"loc":{"start":{"line":41,"column":30},"end":{"line":51,"column":5}},"line":41},"8":{"name":"(anonymous_8)","decl":{"start":{"line":42,"column":46},"end":{"line":42,"column":47}},"loc":{"start":{"line":42,"column":56},"end":{"line":50,"column":9}},"line":42},"9":{"name":"(anonymous_9)","decl":{"start":{"line":53,"column":16},"end":{"line":53,"column":17}},"loc":{"start":{"line":53,"column":22},"end":{"line":65,"column":1}},"line":53},"10":{"name":"(anonymous_10)","decl":{"start":{"line":54,"column":24},"end":{"line":54,"column":25}},"loc":{"start":{"line":54,"column":30},"end":{"line":64,"column":5}},"line":54},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":46},"end":{"line":55,"column":47}},"loc":{"start":{"line":55,"column":56},"end":{"line":63,"column":9}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":66,"column":18},"end":{"line":66,"column":19}},"loc":{"start":{"line":66,"column":24},"end":{"line":83,"column":1}},"line":66},"13":{"name":"(anonymous_13)","decl":{"start":{"line":67,"column":24},"end":{"line":67,"column":25}},"loc":{"start":{"line":67,"column":30},"end":{"line":82,"column":5}},"line":67},"14":{"name":"(anonymous_14)","decl":{"start":{"line":68,"column":46},"end":{"line":68,"column":47}},"loc":{"start":{"line":68,"column":56},"end":{"line":81,"column":9}},"line":68},"15":{"name":"(anonymous_15)","decl":{"start":{"line":84,"column":18},"end":{"line":84,"column":19}},"loc":{"start":{"line":84,"column":24},"end":{"line":103,"column":1}},"line":84},"16":{"name":"(anonymous_16)","decl":{"start":{"line":85,"column":36},"end":{"line":85,"column":37}},"loc":{"start":{"line":85,"column":42},"end":{"line":102,"column":5}},"line":85},"17":{"name":"(anonymous_17)","decl":{"start":{"line":86,"column":46},"end":{"line":86,"column":47}},"loc":{"start":{"line":86,"column":56},"end":{"line":101,"column":9}},"line":86},"18":{"name":"(anonymous_18)","decl":{"start":{"line":104,"column":19},"end":{"line":104,"column":20}},"loc":{"start":{"line":104,"column":25},"end":{"line":116,"column":1}},"line":104},"19":{"name":"(anonymous_19)","decl":{"start":{"line":105,"column":24},"end":{"line":105,"column":25}},"loc":{"start":{"line":105,"column":30},"end":{"line":115,"column":5}},"line":105},"20":{"name":"(anonymous_20)","decl":{"start":{"line":106,"column":46},"end":{"line":106,"column":47}},"loc":{"start":{"line":106,"column":56},"end":{"line":114,"column":9}},"line":106},"21":{"name":"(anonymous_21)","decl":{"start":{"line":117,"column":24},"end":{"line":117,"column":25}},"loc":{"start":{"line":117,"column":30},"end":{"line":129,"column":1}},"line":117},"22":{"name":"(anonymous_22)","decl":{"start":{"line":118,"column":24},"end":{"line":118,"column":25}},"loc":{"start":{"line":118,"column":30},"end":{"line":128,"column":5}},"line":118},"23":{"name":"(anonymous_23)","decl":{"start":{"line":119,"column":46},"end":{"line":119,"column":47}},"loc":{"start":{"line":119,"column":56},"end":{"line":127,"column":9}},"line":119},"24":{"name":"(anonymous_24)","decl":{"start":{"line":130,"column":25},"end":{"line":130,"column":26}},"loc":{"start":{"line":130,"column":31},"end":{"line":147,"column":1}},"line":130},"25":{"name":"(anonymous_25)","decl":{"start":{"line":131,"column":27},"end":{"line":131,"column":28}},"loc":{"start":{"line":131,"column":33},"end":{"line":146,"column":5}},"line":131},"26":{"name":"(anonymous_26)","decl":{"start":{"line":132,"column":51},"end":{"line":132,"column":52}},"loc":{"start":{"line":132,"column":61},"end":{"line":145,"column":9}},"line":132}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":16},"end":{"line":19,"column":17}},"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":19,"column":17}},{"start":{"line":16,"column":16},"end":{"line":19,"column":17}}],"line":16},"1":{"loc":{"start":{"line":32,"column":12},"end":{"line":35,"column":13}},"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":35,"column":13}},{"start":{"line":32,"column":12},"end":{"line":35,"column":13}}],"line":32},"2":{"loc":{"start":{"line":72,"column":16},"end":{"line":75,"column":17}},"type":"if","locations":[{"start":{"line":72,"column":16},"end":{"line":75,"column":17}},{"start":{"line":72,"column":16},"end":{"line":75,"column":17}}],"line":72},"3":{"loc":{"start":{"line":91,"column":16},"end":{"line":95,"column":17}},"type":"if","locations":[{"start":{"line":91,"column":16},"end":{"line":95,"column":17}},{"start":{"line":91,"column":16},"end":{"line":95,"column":17}}],"line":91},"4":{"loc":{"start":{"line":91,"column":20},"end":{"line":92,"column":73}},"type":"binary-expr","locations":[{"start":{"line":91,"column":20},"end":{"line":91,"column":71}},{"start":{"line":92,"column":23},"end":{"line":92,"column":73}}],"line":91},"5":{"loc":{"start":{"line":136,"column":16},"end":{"line":139,"column":17}},"type":"if","locations":[{"start":{"line":136,"column":16},"end":{"line":139,"column":17}},{"start":{"line":136,"column":16},"end":{"line":139,"column":17}}],"line":136}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":0,"49":0,"50":0,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":0,"61":0,"62":0,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":0,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":0,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":0,"86":0,"87":0,"88":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1},"b":{"0":[0,1],"1":[0,1],"2":[0,1],"3":[0,1],"4":[1,1],"5":[0,1]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/tests/domain/main.test.ts","sources":["/home/dauliac/Workspace/koleg/api/tests/domain/main.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { Organisation } from '../../src/domain/organisation';\nimport { UserIdentity } from '../../src/domain/user/UserIdentity';\nimport { Password } from '../../src/domain/user/Password';\nimport { Group } from '../../src/domain/group/Group';\nimport { SshKey } from '../../src/domain/user/SshKey';\nimport { Job } from '../../src/domain/user/Job';\nimport { PhoneNumber } from '../../src/domain/user/PhoneNumber';\n\nimport { genOrganisation } from './organisation';\nimport { genUserIdentity } from './userIdentity';\nimport { genPassword } from './password';\nimport { genPhoneNumber } from './phoneNumber';\nimport { genSshKey } from './sshKey';\nimport { genJob } from './job';\nimport { genGroupId } from './group';\nimport { genUserId } from './user';\nimport { strict } from 'assert';\n\ndescribe('Organisation', () => {\n    describe('#init()', () => {\n      it('should be created without error', (done) => {\n        try {\n            const organisation:Organisation = genOrganisation();\n            if(!organisation) {\n                const err = \"There is not organisation created.\";\n                done(err);\n            }\n        } catch (err) {\n            done(err);\n        }\n        done();\n    });\n    });\n});\n\ndescribe('Identity', () => {\n    describe('#init()', () => {\n      it('should be created without error', (done) => {\n          const identity:UserIdentity = genUserIdentity();\n          if(!identity) {\n              const err = \"User identity is undefined\";\n              done(err);\n          }\n        done();\n    });\n    });\n});\n\ndescribe('Password', () => {\n    describe('#init()', () => {\n      it('should be created without error', (done) => {\n        try {\n            const passwordWithExpiration:Password = genPassword();\n        } catch (err) {\n            done(err);\n        }\n        done();\n    });\n    });\n});\n\ndescribe('Job', () => {\n    describe('#init()', () => {\n      it('should be created without error', (done) => {\n        try {\n            const job:Job = genJob();\n        } catch (err) {\n            done(err);\n        }\n        done();\n    });\n    });\n});\n\ndescribe('Group', () => {\n    describe('#init()', () => {\n      it('should be created without error', (done) => {\n        try {\n            const organisation:Organisation = genOrganisation();\n            const groupId:string = genGroupId(organisation);\n\n            if(!organisation.getGroupPropertiesById(groupId)) {\n                const err = \"There is not group into organisation\";\n                done(err);\n            }\n        } catch (err) {\n            done(err);\n        }\n\n        done();\n      });\n    });\n});\n\ndescribe('Group', () => {\n    describe('#init() with parent', () => {\n      it('should be created without error', (done) => {\n        try {\n            const organisation:Organisation = genOrganisation();\n            const parentGroupId:string = genGroupId(organisation);\n            const childGroupId:string = genGroupId(organisation, parentGroupId);\n\n            if(\n              !organisation.getGroupPropertiesById(parentGroupId)\n              || !organisation.getGroupPropertiesById(childGroupId)\n            ) {\n                const err = \"There is not group into organisation\";\n                done(err);\n            }\n        } catch (err) {\n            done(err);\n        }\n\n        done();\n      });\n    });\n});\n\n\ndescribe('SshKey', () => {\n    describe('#init()', () => {\n      it('should be created without error', (done) => {\n        try {\n            const sshKey:SshKey = genSshKey();\n        } catch (err) {\n            done(err);\n        }\n        done();\n    });\n    });\n});\n\ndescribe('PhoneNumber', () => {\n    describe('#init()', () => {\n      it('should be created without error', (done) => {\n        try {\n            const phoneNumber: PhoneNumber = genPhoneNumber();\n        } catch (err) {\n            done(err)\n        }\n        done();\n    });\n    });\n});\n\ndescribe('Organisation', () => {\n    describe('#addUser()', () => {\n      it('user should be created without error', (done) => {\n        try {\n          const organisation:Organisation = genOrganisation();\n          const userId:string = genUserId(organisation);\n          if(!organisation.getReadableUserById(userId)) {\n              const err = \"There is no user into organisation.\";\n              done(err);\n          }\n        } catch (err) {\n            done(err)\n        }\n        done();\n    });\n    });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b33f95a5745560189e0f07f557b7ddb8fbb77dc8","contentHash":"97d61131a20384aed6b962e230be42a74db642910a1678a229b5bd00855e6e58"},"/home/dauliac/Workspace/koleg/api/tests/domain/organisation.ts":{"path":"/home/dauliac/Workspace/koleg/api/tests/domain/organisation.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":63}},"3":{"start":{"line":5,"column":24},"end":{"line":7,"column":1}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":82}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":24},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":30},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":4,"5":1},"f":{"0":4},"b":{},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/tests/domain/organisation.ts","sources":["/home/dauliac/Workspace/koleg/api/tests/domain/organisation.ts"],"names":[],"mappings":";;;AAAA,gEAA2D;AAEpD,MAAM,eAAe,GAAG,GAAgB,EAAE;IAC7C,OAAO,IAAI,2BAAY,CAAC,WAAW,EAAE,wBAAwB,CAAC,CAAC;AACnE,CAAC,CAAA;AAFY,QAAA,eAAe,mBAE3B","sourcesContent":["import {Organisation} from '../../src/domain/organisation';\n\nexport const genOrganisation = ():Organisation => {\n    return new Organisation(\"Test Corp\", \"Test Corp description.\");\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c2ab99f5efbb21468bc8c63f976083a536deca53","contentHash":"040d957eca0126c5c00af963f63200ae2b373de0fc83ce3d52f6922043fad8ba"},"/home/dauliac/Workspace/koleg/api/src/domain/organisation.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/organisation.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":28},"end":{"line":5,"column":64}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":40}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":37}},"6":{"start":{"line":8,"column":14},"end":{"line":8,"column":35}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":41}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":26}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":24}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":24}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":26}},"15":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"16":{"start":{"line":27,"column":12},"end":{"line":27,"column":61}},"17":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"18":{"start":{"line":30,"column":12},"end":{"line":30,"column":67}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":26}},"20":{"start":{"line":33,"column":8},"end":{"line":33,"column":55}},"21":{"start":{"line":36,"column":8},"end":{"line":36,"column":33}},"22":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"23":{"start":{"line":40,"column":12},"end":{"line":40,"column":61}},"24":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"25":{"start":{"line":43,"column":12},"end":{"line":43,"column":67}},"26":{"start":{"line":45,"column":8},"end":{"line":45,"column":40}},"27":{"start":{"line":46,"column":8},"end":{"line":46,"column":55}},"28":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"29":{"start":{"line":53,"column":12},"end":{"line":53,"column":24}},"30":{"start":{"line":55,"column":8},"end":{"line":55,"column":21}},"31":{"start":{"line":58,"column":22},"end":{"line":58,"column":49}},"32":{"start":{"line":59,"column":8},"end":{"line":59,"column":45}},"33":{"start":{"line":62,"column":28},"end":{"line":62,"column":61}},"34":{"start":{"line":63,"column":29},"end":{"line":63,"column":31}},"35":{"start":{"line":64,"column":8},"end":{"line":70,"column":11}},"36":{"start":{"line":65,"column":31},"end":{"line":65,"column":64}},"37":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"38":{"start":{"line":67,"column":16},"end":{"line":67,"column":80}},"39":{"start":{"line":69,"column":12},"end":{"line":69,"column":42}},"40":{"start":{"line":71,"column":25},"end":{"line":71,"column":96}},"41":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"42":{"start":{"line":73,"column":12},"end":{"line":73,"column":53}},"43":{"start":{"line":75,"column":8},"end":{"line":75,"column":36}},"44":{"start":{"line":76,"column":8},"end":{"line":76,"column":32}},"45":{"start":{"line":82,"column":32},"end":{"line":82,"column":34}},"46":{"start":{"line":83,"column":8},"end":{"line":85,"column":11}},"47":{"start":{"line":84,"column":12},"end":{"line":84,"column":63}},"48":{"start":{"line":86,"column":8},"end":{"line":86,"column":31}},"49":{"start":{"line":89,"column":8},"end":{"line":90,"column":63}},"50":{"start":{"line":90,"column":12},"end":{"line":90,"column":63}},"51":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"52":{"start":{"line":92,"column":12},"end":{"line":92,"column":24}},"53":{"start":{"line":94,"column":8},"end":{"line":94,"column":21}},"54":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"55":{"start":{"line":98,"column":12},"end":{"line":98,"column":63}},"56":{"start":{"line":100,"column":21},"end":{"line":100,"column":46}},"57":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"58":{"start":{"line":102,"column":12},"end":{"line":102,"column":24}},"59":{"start":{"line":104,"column":8},"end":{"line":104,"column":44}},"60":{"start":{"line":107,"column":27},"end":{"line":107,"column":50}},"61":{"start":{"line":108,"column":8},"end":{"line":112,"column":11}},"62":{"start":{"line":109,"column":12},"end":{"line":111,"column":13}},"63":{"start":{"line":110,"column":16},"end":{"line":110,"column":63}},"64":{"start":{"line":113,"column":24},"end":{"line":113,"column":54}},"65":{"start":{"line":114,"column":8},"end":{"line":114,"column":34}},"66":{"start":{"line":115,"column":8},"end":{"line":115,"column":31}},"67":{"start":{"line":119,"column":8},"end":{"line":120,"column":63}},"68":{"start":{"line":120,"column":12},"end":{"line":120,"column":63}},"69":{"start":{"line":121,"column":35},"end":{"line":121,"column":89}},"70":{"start":{"line":121,"column":65},"end":{"line":121,"column":88}},"71":{"start":{"line":122,"column":8},"end":{"line":123,"column":61}},"72":{"start":{"line":123,"column":12},"end":{"line":123,"column":61}},"73":{"start":{"line":124,"column":8},"end":{"line":125,"column":72}},"74":{"start":{"line":125,"column":12},"end":{"line":125,"column":72}},"75":{"start":{"line":126,"column":29},"end":{"line":126,"column":70}},"76":{"start":{"line":127,"column":8},"end":{"line":132,"column":9}},"77":{"start":{"line":128,"column":12},"end":{"line":128,"column":59}},"78":{"start":{"line":131,"column":12},"end":{"line":131,"column":58}},"79":{"start":{"line":136,"column":8},"end":{"line":136,"column":20}},"80":{"start":{"line":140,"column":8},"end":{"line":140,"column":20}},"81":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"82":{"start":{"line":144,"column":12},"end":{"line":144,"column":77}},"83":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"84":{"start":{"line":147,"column":12},"end":{"line":147,"column":61}},"85":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"86":{"start":{"line":150,"column":12},"end":{"line":150,"column":74}},"87":{"start":{"line":152,"column":21},"end":{"line":152,"column":56}},"88":{"start":{"line":153,"column":8},"end":{"line":153,"column":52}},"89":{"start":{"line":154,"column":8},"end":{"line":161,"column":9}},"90":{"start":{"line":155,"column":12},"end":{"line":159,"column":15}},"91":{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},"92":{"start":{"line":157,"column":20},"end":{"line":157,"column":67}},"93":{"start":{"line":160,"column":12},"end":{"line":160,"column":55}},"94":{"start":{"line":162,"column":8},"end":{"line":162,"column":42}},"95":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"96":{"start":{"line":164,"column":12},"end":{"line":164,"column":58}},"97":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"98":{"start":{"line":167,"column":12},"end":{"line":167,"column":56}},"99":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"100":{"start":{"line":170,"column":12},"end":{"line":170,"column":74}},"101":{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},"102":{"start":{"line":173,"column":12},"end":{"line":173,"column":52}},"103":{"start":{"line":176,"column":8},"end":{"line":176,"column":55}},"104":{"start":{"line":182,"column":8},"end":{"line":182,"column":26}},"105":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"106":{"start":{"line":185,"column":35},"end":{"line":185,"column":55}},"107":{"start":{"line":186,"column":12},"end":{"line":186,"column":24}},"108":{"start":{"line":188,"column":8},"end":{"line":188,"column":21}},"109":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"110":{"start":{"line":192,"column":12},"end":{"line":192,"column":63}},"111":{"start":{"line":194,"column":8},"end":{"line":194,"column":32}},"112":{"start":{"line":195,"column":8},"end":{"line":195,"column":55}},"113":{"start":{"line":198,"column":25},"end":{"line":198,"column":44}},"114":{"start":{"line":199,"column":29},"end":{"line":199,"column":73}},"115":{"start":{"line":199,"column":52},"end":{"line":199,"column":72}},"116":{"start":{"line":200,"column":8},"end":{"line":201,"column":45}},"117":{"start":{"line":201,"column":12},"end":{"line":201,"column":45}},"118":{"start":{"line":202,"column":8},"end":{"line":202,"column":28}},"119":{"start":{"line":206,"column":34},"end":{"line":206,"column":88}},"120":{"start":{"line":206,"column":62},"end":{"line":206,"column":87}},"121":{"start":{"line":207,"column":8},"end":{"line":208,"column":61}},"122":{"start":{"line":208,"column":12},"end":{"line":208,"column":61}},"123":{"start":{"line":209,"column":27},"end":{"line":209,"column":66}},"124":{"start":{"line":210,"column":8},"end":{"line":215,"column":9}},"125":{"start":{"line":211,"column":12},"end":{"line":211,"column":59}},"126":{"start":{"line":214,"column":12},"end":{"line":214,"column":58}},"127":{"start":{"line":221,"column":28},"end":{"line":221,"column":83}},"128":{"start":{"line":221,"column":57},"end":{"line":221,"column":82}},"129":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"130":{"start":{"line":223,"column":12},"end":{"line":223,"column":80}},"131":{"start":{"line":225,"column":8},"end":{"line":227,"column":9}},"132":{"start":{"line":226,"column":12},"end":{"line":226,"column":24}},"133":{"start":{"line":228,"column":8},"end":{"line":228,"column":30}},"134":{"start":{"line":231,"column":8},"end":{"line":235,"column":11}},"135":{"start":{"line":232,"column":12},"end":{"line":234,"column":13}},"136":{"start":{"line":233,"column":16},"end":{"line":233,"column":28}},"137":{"start":{"line":236,"column":8},"end":{"line":236,"column":21}},"138":{"start":{"line":242,"column":28},"end":{"line":242,"column":82}},"139":{"start":{"line":242,"column":56},"end":{"line":242,"column":81}},"140":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"141":{"start":{"line":244,"column":12},"end":{"line":244,"column":79}},"142":{"start":{"line":246,"column":8},"end":{"line":246,"column":30}},"143":{"start":{"line":249,"column":0},"end":{"line":249,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":37},"end":{"line":18,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":12},"end":{"line":21,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":14},"end":{"line":24,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":18},"end":{"line":34,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":21},"end":{"line":37,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":32},"end":{"line":47,"column":5}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":31},"end":{"line":56,"column":5}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":36},"end":{"line":60,"column":5}},"line":57},"8":{"name":"(anonymous_8)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":90},"end":{"line":77,"column":5}},"line":61},"9":{"name":"(anonymous_9)","decl":{"start":{"line":64,"column":31},"end":{"line":64,"column":32}},"loc":{"start":{"line":64,"column":48},"end":{"line":70,"column":9}},"line":64},"10":{"name":"(anonymous_10)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":25},"end":{"line":87,"column":5}},"line":81},"11":{"name":"(anonymous_11)","decl":{"start":{"line":83,"column":28},"end":{"line":83,"column":29}},"loc":{"start":{"line":83,"column":36},"end":{"line":85,"column":9}},"line":83},"12":{"name":"(anonymous_12)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":29},"end":{"line":95,"column":5}},"line":88},"13":{"name":"(anonymous_13)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":32},"end":{"line":105,"column":5}},"line":96},"14":{"name":"(anonymous_14)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":27},"end":{"line":116,"column":5}},"line":106},"15":{"name":"(anonymous_15)","decl":{"start":{"line":108,"column":27},"end":{"line":108,"column":28}},"loc":{"start":{"line":108,"column":38},"end":{"line":112,"column":9}},"line":108},"16":{"name":"(anonymous_16)","decl":{"start":{"line":117,"column":4},"end":{"line":117,"column":5}},"loc":{"start":{"line":117,"column":23},"end":{"line":133,"column":5}},"line":117},"17":{"name":"(anonymous_17)","decl":{"start":{"line":121,"column":57},"end":{"line":121,"column":58}},"loc":{"start":{"line":121,"column":65},"end":{"line":121,"column":88}},"line":121},"18":{"name":"(anonymous_18)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":40},"end":{"line":137,"column":5}},"line":135},"19":{"name":"(anonymous_19)","decl":{"start":{"line":139,"column":4},"end":{"line":139,"column":5}},"loc":{"start":{"line":139,"column":43},"end":{"line":141,"column":5}},"line":139},"20":{"name":"(anonymous_20)","decl":{"start":{"line":142,"column":4},"end":{"line":142,"column":5}},"loc":{"start":{"line":142,"column":30},"end":{"line":177,"column":5}},"line":142},"21":{"name":"(anonymous_21)","decl":{"start":{"line":155,"column":41},"end":{"line":155,"column":42}},"loc":{"start":{"line":155,"column":52},"end":{"line":159,"column":13}},"line":155},"22":{"name":"(anonymous_22)","decl":{"start":{"line":181,"column":4},"end":{"line":181,"column":5}},"loc":{"start":{"line":181,"column":20},"end":{"line":183,"column":5}},"line":181},"23":{"name":"(anonymous_23)","decl":{"start":{"line":184,"column":4},"end":{"line":184,"column":5}},"loc":{"start":{"line":184,"column":26},"end":{"line":189,"column":5}},"line":184},"24":{"name":"(anonymous_24)","decl":{"start":{"line":185,"column":28},"end":{"line":185,"column":29}},"loc":{"start":{"line":185,"column":35},"end":{"line":185,"column":55}},"line":185},"25":{"name":"(anonymous_25)","decl":{"start":{"line":190,"column":4},"end":{"line":190,"column":5}},"loc":{"start":{"line":190,"column":19},"end":{"line":196,"column":5}},"line":190},"26":{"name":"(anonymous_26)","decl":{"start":{"line":197,"column":4},"end":{"line":197,"column":5}},"loc":{"start":{"line":197,"column":17},"end":{"line":203,"column":5}},"line":197},"27":{"name":"(anonymous_27)","decl":{"start":{"line":199,"column":45},"end":{"line":199,"column":46}},"loc":{"start":{"line":199,"column":52},"end":{"line":199,"column":72}},"line":199},"28":{"name":"(anonymous_28)","decl":{"start":{"line":204,"column":4},"end":{"line":204,"column":5}},"loc":{"start":{"line":204,"column":23},"end":{"line":216,"column":5}},"line":204},"29":{"name":"(anonymous_29)","decl":{"start":{"line":206,"column":55},"end":{"line":206,"column":56}},"loc":{"start":{"line":206,"column":62},"end":{"line":206,"column":87}},"line":206},"30":{"name":"(anonymous_30)","decl":{"start":{"line":220,"column":4},"end":{"line":220,"column":5}},"loc":{"start":{"line":220,"column":27},"end":{"line":229,"column":5}},"line":220},"31":{"name":"(anonymous_31)","decl":{"start":{"line":221,"column":48},"end":{"line":221,"column":49}},"loc":{"start":{"line":221,"column":57},"end":{"line":221,"column":82}},"line":221},"32":{"name":"(anonymous_32)","decl":{"start":{"line":230,"column":4},"end":{"line":230,"column":5}},"loc":{"start":{"line":230,"column":40},"end":{"line":237,"column":5}},"line":230},"33":{"name":"(anonymous_33)","decl":{"start":{"line":231,"column":23},"end":{"line":231,"column":24}},"loc":{"start":{"line":231,"column":34},"end":{"line":235,"column":9}},"line":231},"34":{"name":"(anonymous_34)","decl":{"start":{"line":241,"column":4},"end":{"line":241,"column":5}},"loc":{"start":{"line":241,"column":26},"end":{"line":247,"column":5}},"line":241},"35":{"name":"(anonymous_35)","decl":{"start":{"line":242,"column":47},"end":{"line":242,"column":48}},"loc":{"start":{"line":242,"column":56},"end":{"line":242,"column":81}},"line":242}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"1":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"2":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"3":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42},"4":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{"line":52,"column":8},"end":{"line":54,"column":9}}],"line":52},"5":{"loc":{"start":{"line":61,"column":32},"end":{"line":61,"column":45}},"type":"default-arg","locations":[{"start":{"line":61,"column":41},"end":{"line":61,"column":45}}],"line":61},"6":{"loc":{"start":{"line":61,"column":47},"end":{"line":61,"column":67}},"type":"default-arg","locations":[{"start":{"line":61,"column":63},"end":{"line":61,"column":67}}],"line":61},"7":{"loc":{"start":{"line":61,"column":69},"end":{"line":61,"column":88}},"type":"default-arg","locations":[{"start":{"line":61,"column":86},"end":{"line":61,"column":88}}],"line":61},"8":{"loc":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},{"start":{"line":66,"column":12},"end":{"line":68,"column":13}}],"line":66},"9":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{"line":72,"column":8},"end":{"line":74,"column":9}}],"line":72},"10":{"loc":{"start":{"line":89,"column":8},"end":{"line":90,"column":63}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":90,"column":63}},{"start":{"line":89,"column":8},"end":{"line":90,"column":63}}],"line":89},"11":{"loc":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},{"start":{"line":91,"column":8},"end":{"line":93,"column":9}}],"line":91},"12":{"loc":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},{"start":{"line":97,"column":8},"end":{"line":99,"column":9}}],"line":97},"13":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"14":{"loc":{"start":{"line":109,"column":12},"end":{"line":111,"column":13}},"type":"if","locations":[{"start":{"line":109,"column":12},"end":{"line":111,"column":13}},{"start":{"line":109,"column":12},"end":{"line":111,"column":13}}],"line":109},"15":{"loc":{"start":{"line":119,"column":8},"end":{"line":120,"column":63}},"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":120,"column":63}},{"start":{"line":119,"column":8},"end":{"line":120,"column":63}}],"line":119},"16":{"loc":{"start":{"line":122,"column":8},"end":{"line":123,"column":61}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":123,"column":61}},{"start":{"line":122,"column":8},"end":{"line":123,"column":61}}],"line":122},"17":{"loc":{"start":{"line":124,"column":8},"end":{"line":125,"column":72}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":125,"column":72}},{"start":{"line":124,"column":8},"end":{"line":125,"column":72}}],"line":124},"18":{"loc":{"start":{"line":127,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":132,"column":9}},{"start":{"line":127,"column":8},"end":{"line":132,"column":9}}],"line":127},"19":{"loc":{"start":{"line":127,"column":13},"end":{"line":127,"column":83}},"type":"cond-expr","locations":[{"start":{"line":127,"column":64},"end":{"line":127,"column":70}},{"start":{"line":127,"column":73},"end":{"line":127,"column":83}}],"line":127},"20":{"loc":{"start":{"line":127,"column":13},"end":{"line":127,"column":61}},"type":"binary-expr","locations":[{"start":{"line":127,"column":13},"end":{"line":127,"column":44}},{"start":{"line":127,"column":48},"end":{"line":127,"column":61}}],"line":127},"21":{"loc":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},{"start":{"line":143,"column":8},"end":{"line":145,"column":9}}],"line":143},"22":{"loc":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},{"start":{"line":146,"column":8},"end":{"line":148,"column":9}}],"line":146},"23":{"loc":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},{"start":{"line":149,"column":8},"end":{"line":151,"column":9}}],"line":149},"24":{"loc":{"start":{"line":154,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":161,"column":9}},{"start":{"line":154,"column":8},"end":{"line":161,"column":9}}],"line":154},"25":{"loc":{"start":{"line":154,"column":12},"end":{"line":154,"column":88}},"type":"binary-expr","locations":[{"start":{"line":154,"column":12},"end":{"line":154,"column":50}},{"start":{"line":154,"column":54},"end":{"line":154,"column":88}}],"line":154},"26":{"loc":{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},"type":"if","locations":[{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},{"start":{"line":156,"column":16},"end":{"line":158,"column":17}}],"line":156},"27":{"loc":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},{"start":{"line":163,"column":8},"end":{"line":165,"column":9}}],"line":163},"28":{"loc":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},{"start":{"line":166,"column":8},"end":{"line":168,"column":9}}],"line":166},"29":{"loc":{"start":{"line":166,"column":12},"end":{"line":166,"column":94}},"type":"binary-expr","locations":[{"start":{"line":166,"column":12},"end":{"line":166,"column":34}},{"start":{"line":166,"column":38},"end":{"line":166,"column":94}}],"line":166},"30":{"loc":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},{"start":{"line":169,"column":8},"end":{"line":171,"column":9}}],"line":169},"31":{"loc":{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},{"start":{"line":172,"column":8},"end":{"line":174,"column":9}}],"line":172},"32":{"loc":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},{"start":{"line":185,"column":8},"end":{"line":187,"column":9}}],"line":185},"33":{"loc":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},{"start":{"line":191,"column":8},"end":{"line":193,"column":9}}],"line":191},"34":{"loc":{"start":{"line":200,"column":8},"end":{"line":201,"column":45}},"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":201,"column":45}},{"start":{"line":200,"column":8},"end":{"line":201,"column":45}}],"line":200},"35":{"loc":{"start":{"line":207,"column":8},"end":{"line":208,"column":61}},"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":208,"column":61}},{"start":{"line":207,"column":8},"end":{"line":208,"column":61}}],"line":207},"36":{"loc":{"start":{"line":210,"column":8},"end":{"line":215,"column":9}},"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":215,"column":9}},{"start":{"line":210,"column":8},"end":{"line":215,"column":9}}],"line":210},"37":{"loc":{"start":{"line":210,"column":13},"end":{"line":210,"column":83}},"type":"cond-expr","locations":[{"start":{"line":210,"column":62},"end":{"line":210,"column":68}},{"start":{"line":210,"column":71},"end":{"line":210,"column":83}}],"line":210},"38":{"loc":{"start":{"line":210,"column":13},"end":{"line":210,"column":59}},"type":"binary-expr","locations":[{"start":{"line":210,"column":13},"end":{"line":210,"column":42}},{"start":{"line":210,"column":46},"end":{"line":210,"column":59}}],"line":210},"39":{"loc":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"type":"if","locations":[{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},{"start":{"line":222,"column":8},"end":{"line":224,"column":9}}],"line":222},"40":{"loc":{"start":{"line":225,"column":8},"end":{"line":227,"column":9}},"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":227,"column":9}},{"start":{"line":225,"column":8},"end":{"line":227,"column":9}}],"line":225},"41":{"loc":{"start":{"line":232,"column":12},"end":{"line":234,"column":13}},"type":"if","locations":[{"start":{"line":232,"column":12},"end":{"line":234,"column":13}},{"start":{"line":232,"column":12},"end":{"line":234,"column":13}}],"line":232},"42":{"loc":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},{"start":{"line":243,"column":8},"end":{"line":245,"column":9}}],"line":243}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":4,"8":4,"9":4,"10":4,"11":4,"12":4,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":1,"30":0,"31":3,"32":3,"33":4,"34":4,"35":4,"36":0,"37":0,"38":0,"39":0,"40":4,"41":4,"42":0,"43":4,"44":4,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1,"57":1,"58":0,"59":1,"60":1,"61":1,"62":1,"63":0,"64":1,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":8,"128":7,"129":8,"130":0,"131":8,"132":3,"133":5,"134":0,"135":0,"136":0,"137":0,"138":1,"139":1,"140":1,"141":0,"142":1,"143":1},"f":{"0":4,"1":0,"2":0,"3":0,"4":0,"5":0,"6":1,"7":3,"8":4,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":8,"31":7,"32":0,"33":0,"34":1,"35":1},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[1,0],"5":[0],"6":[3],"7":[4],"8":[0,0],"9":[0,4],"10":[0,0],"11":[0,0],"12":[0,1],"13":[0,1],"14":[0,1],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,8],"40":[3,5],"41":[0,0],"42":[0,1]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/organisation.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/organisation.ts"],"names":[],"mappings":"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","sourcesContent":["import { v4 as uuid } from 'uuid';\n\nimport { ReturnCodes } from './enums/return-codes.enum';\nimport { Group } from './group/Group';\nimport { GroupProperties } from './group/GroupProperties';\nimport { User } from './user/User';\nimport { Job } from './user/Job';\nimport { ReadableUser } from './user/ReadableUser';\nimport { StatelessUser } from './user/StatelessUser';\n\n// This is the aggregate\nexport class Organisation {\n    private _id: string\n    private _groups: Group[] = [];\n    private _users: User[] = [];\n    private _jobs: Job[] = [];\n\n    constructor(\n        private _name?: string,\n        private _description?: string,\n    ) {\n        this._id = uuid();\n    }\n\n    public getId(): string {\n        return this._id;\n    }\n\n    public getName(): string {\n        return this._name;\n    }\n\n    public setName(name: string): ReturnCodes {\n        if (!name) {\n            throw new Error('Invalid argument name: string');\n        }\n\n        if (name === this._name) {\n            return ReturnCodes.NOTHING_CHANGED;\n        }\n        this._name = name;\n        return ReturnCodes.UPDATED;\n    }\n\n    public getDescription(): string {\n        return this._description;\n    }\n\n    public setDescription(description: string): ReturnCodes {\n        if (!description) {\n            throw new Error('Invalid argument name: string');\n        }\n\n        if (description === this._description) {\n            return ReturnCodes.NOTHING_CHANGED;\n        }\n        this._description = description;\n        return ReturnCodes.UPDATED;\n    }\n\n    // ####################\n    // ###### GROUPS ######\n    // ####################\n\n    public containsGroupById(groupId: string): boolean {\n        if (this._getGroupById(groupId)) {\n            return true;\n        }\n        return false;\n    }\n\n    public getGroupPropertiesById(groupId: string): GroupProperties {\n        const group: Group = this._getGroupById(groupId);\n        return group.getReadableProperties();\n    }\n\n    public addGroup(\n        name: string,\n        description: string,\n        imgUrl: URL = null,\n        parentGroupId: string = null,\n        childsGroupsId: string[] = []\n    ): string {\n        const parentGroup: Group = this._getGroupById(parentGroupId);\n        const childsGroups: Group[] = [];\n\n        childsGroupsId.forEach(childsGroupId => {\n            const childGroup: Group = this._getGroupById(childsGroupId);\n            if (!this._getGroupById(childsGroupId)) {\n                throw new Error(`Child group ${childsGroupId} does not exist.`);\n            }\n            childsGroups.push(childGroup);\n        })\n        const newGroup: Group = new Group(name, description, imgUrl, parentGroup, childsGroups);\n        if (!newGroup) {\n            throw new Error('Group was not created');\n        }\n\n        this._groups.push(newGroup);\n        return newGroup.getId();\n    }\n\n    // ####################\n    // ###### USERS #######\n    // ####################\n\n    public getUsersProperties(): ReadableUser[] {\n        const usersProperties: ReadableUser[] = [];\n\n        this._users.forEach(user => {\n            usersProperties.push(user.getReadableProperties());\n        })\n\n        return usersProperties;\n    }\n\n    public containsUserById(userId: string): boolean {\n        if (!userId)\n            throw new Error('Invalid argument userId: string');\n\n        if (this._getUserById(userId)) {\n            return true;\n        }\n        return false;\n    }\n\n    public getReadableUserById(userId: string): ReadableUser {\n        if (!userId) {\n            throw new Error('Invalid argument userId: string');\n        }\n\n        const user: User = this._getUserById(userId);\n        if (!user) {\n            return null;\n        }\n        return user.getReadableProperties();\n    }\n\n    public addUser(statelessUser: StatelessUser): string {\n\n        const userGroups: string[] = statelessUser.groupsIds;\n        userGroups.forEach(groupId => {\n            if (!this.containsGroupById(groupId)) {\n                throw new Error(`Invalid groupId: ${groupId}`);\n            }\n        });\n\n        const newUser = new User(statelessUser)\n        this._users.push(newUser);\n\n        return newUser.getId();\n    }\n\n    public deleteUser(userId: string): ReturnCodes {\n        if (!userId)\n            throw new Error('Invalid argument userId: string');\n\n        const requestedUserIndex = this._users.findIndex(user => userId === user.getId());\n\n        if (requestedUserIndex < 0)\n            return ReturnCodes.NOT_FOUND\n\n        if (requestedUserIndex > 1)\n            throw new Error('There is more than one user with this id')\n\n        const deletedUsers = this._users.splice(requestedUserIndex, 1);\n\n        if (deletedUsers[0]?.getId() === userId) {\n            return ReturnCodes.REMOVED;\n        } else {\n            throw new Error('Failure to delete the user');\n        }\n    }\n\n    // TODO: fill this functions\n    public getUserByIdentifier(userIdentifier: string): string {\n        return null;\n    }\n\n    // TODO: fill this functions\n    public verifyUserPassword(userUuid: string, password: string): string {\n        return null;\n    }\n\n    public updateUser(statelessUser: StatelessUser): ReturnCodes {\n        if (!statelessUser) {\n            throw new Error('Invalid argument statelessUser: StatelessUser')\n        }\n        if (!this.containsUserById(statelessUser.id)) {\n            return ReturnCodes.NOT_FOUND;\n        }\n        if (!statelessUser.identity) {\n            throw new Error('statelessUser.identity Should not be empty');\n        }\n\n        const user: User = this._getUserById(statelessUser.id);\n        user.updateIdentity(statelessUser.identity);\n\n        if (Array.isArray(statelessUser.groupsIds) && statelessUser.groupsIds.length > 0) {\n\n            statelessUser.groupsIds.some(groupId => {\n                if (!this.containsGroupById(groupId)) {\n                    throw new Error(`Invalid groupId: ${groupId}`);\n                }\n            });\n\n            user.updateGroups(statelessUser.groupsIds);\n        }\n        user.updateJob(statelessUser.job);\n        if (statelessUser.birthdate) {\n            user.updateBirthDate(statelessUser.birthdate);\n        }\n        if (statelessUser.password && !statelessUser.password.hasSameValue(user.getPassword())) {\n            user.updatePassword(statelessUser.password);\n        }\n        if (statelessUser.profilePictureUrl) {\n            user.updateProfilePictureUrl(statelessUser.profilePictureUrl);\n        }\n        if (statelessUser.sshKey) {\n            user.updateSshKey(statelessUser.sshKey);\n        }\n\n        // return ReturnCodes.NOTHING_CHANGED;\n        return ReturnCodes.UPDATED;\n    }\n\n    // ####################\n    // ####### JOBS #######\n    // ####################\n\n    public getJobs(filter?:string): Job[] {\n        return this._jobs;\n    }\n\n    public containsJob(givenJob: Job): boolean {\n        if (this._jobs.some(job => job.equals(givenJob))) {\n            return true;\n        }\n\n        return false\n    }\n\n    public addJob(newJob: Job): ReturnCodes {\n        if (this.containsJob(newJob)) {\n            return ReturnCodes.CONFLICTING;\n        }\n\n        this._jobs.push(newJob);\n        return ReturnCodes.CREATED;\n    }\n\n    public getJob(name: string): Job {\n        const queryJob = new Job(name);\n        const requestedJob = this._jobs.find(job => job.equals(queryJob));\n\n        if (!requestedJob)\n            throw new Error('Job not found')\n\n        return requestedJob;\n    }\n\n    public deleteJob(jobName: string): ReturnCodes {\n        const requestedJobIndex = this._jobs.findIndex(job => jobName === job.getName());\n\n        if (requestedJobIndex < 0)\n            return ReturnCodes.NOT_FOUND;\n\n        const deleteJobs = this._jobs.splice(requestedJobIndex, 1);\n\n        if (deleteJobs[0]?.getName() === jobName) {\n            return ReturnCodes.REMOVED;\n        } else {\n            throw new Error('Failure to delete the user');\n        }\n    }\n\n    // ####################\n    // ###### GROUPS ######\n    // ####################\n\n    private _getGroupById(groupId: string): Group {\n        const foundGroups: Group[] = this._groups.filter(group =>\n            group.getId() === groupId);\n        if (foundGroups.length > 1) {\n            throw new Error('Find 2 or more corresponding group with this id.');\n        }\n\n        if (foundGroups.length === 0) {\n            return null;\n        }\n\n        return foundGroups[0];\n    }\n\n    private _containsInvalidGroupIds(groupsIds: string[]): boolean {\n        groupsIds.some(groupId => {\n            if (!this.containsGroupById(groupId)) {\n                return true;\n            }\n        });\n        return false;\n    }\n\n    // ###################\n    // ###### USERS ######\n    // ###################\n\n    public _getUserById(groupId: string): User {\n        const findedUsers: User[] = this._users.filter(group =>\n            group.getId() === groupId);\n        if (findedUsers.length > 1) {\n            throw new Error('Find 2 or more corresponding user with this id.');\n        }\n\n        return findedUsers[0];\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6e8b898281b57e8ba9a4de1481c12139ef02bd89","contentHash":"159a7a0216d2f5e4bbdd8c764eb7bb3576af0caa0a007c8fa041e35f1a9528fa"},"/home/dauliac/Workspace/koleg/api/src/domain/enums/return-codes.enum.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/enums/return-codes.enum.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":0},"end":{"line":17,"column":68}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":56}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":56}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":56}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":72}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":62}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":61}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":67}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":65}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":75}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":65}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":67}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":24},"end":{"line":17,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":66}},"type":"binary-expr","locations":[{"start":{"line":17,"column":17},"end":{"line":17,"column":36}},{"start":{"line":17,"column":41},"end":{"line":17,"column":65}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/enums/return-codes.enum.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/enums/return-codes.enum.ts"],"names":[],"mappings":";;;AAAA,IAAY,WAYX;AAZD,WAAY,WAAW;IACrB,mDAAW,CAAA;IACX,mDAAW,CAAA;IACX,mDAAW,CAAA;IACX,mEAAmB,CAAA;IACnB,yDAAc,CAAA;IACd,wDAAc,CAAA;IACd,8DAAiB,CAAA;IACjB,4DAAgB,CAAA;IAChB,sEAAqB,CAAA;IACrB,4DAAgB,CAAA;IAChB,8DAAiB,CAAA;AACnB,CAAC,EAZW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAYtB","sourcesContent":["export enum ReturnCodes {\n  UPDATED = 0,\n  REMOVED = 1,\n  CREATED = 2,\n  NOTHING_CHANGED = 3,\n  DUPLICATED = 4,\n  NOT_FOUND = -1,\n  NOT_EDITABLE = -2,\n  NOT_CREATED = -2,\n  WAS_ALREADY_USED = -3,\n  CONFLICTING = -4,\n  SERVER_ERROR = -5,\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7290f244a43d12e40aa6c9df84ff2c983898f071","contentHash":"dbe61fedfe2e657c9f6ebb49f6fa7e985c39eda2ccd2f55387f7aa846e28c003"},"/home/dauliac/Workspace/koleg/api/src/domain/group/Group.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/group/Group.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":28},"end":{"line":5,"column":65}},"4":{"start":{"line":6,"column":26},"end":{"line":6,"column":54}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":27}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":41}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":31}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":41}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":43}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":31}},"11":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"12":{"start":{"line":16,"column":12},"end":{"line":16,"column":45}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":24}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":26}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":33}},"16":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"17":{"start":{"line":30,"column":12},"end":{"line":30,"column":68}},"18":{"start":{"line":32,"column":8},"end":{"line":32,"column":40}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":55}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":28}},"21":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"22":{"start":{"line":40,"column":12},"end":{"line":40,"column":60}},"23":{"start":{"line":42,"column":8},"end":{"line":42,"column":30}},"24":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"25":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"26":{"start":{"line":47,"column":12},"end":{"line":47,"column":45}},"27":{"start":{"line":49,"column":8},"end":{"line":49,"column":20}},"28":{"start":{"line":52,"column":8},"end":{"line":53,"column":41}},"29":{"start":{"line":53,"column":26},"end":{"line":53,"column":39}},"30":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"31":{"start":{"line":57,"column":12},"end":{"line":57,"column":24}},"32":{"start":{"line":59,"column":8},"end":{"line":59,"column":21}},"33":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"34":{"start":{"line":63,"column":12},"end":{"line":63,"column":25}},"35":{"start":{"line":65,"column":8},"end":{"line":65,"column":20}},"36":{"start":{"line":69,"column":8},"end":{"line":70,"column":64}},"37":{"start":{"line":73,"column":8},"end":{"line":73,"column":64}},"38":{"start":{"line":77,"column":40},"end":{"line":78,"column":79}},"39":{"start":{"line":78,"column":36},"end":{"line":78,"column":78}},"40":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"41":{"start":{"line":80,"column":12},"end":{"line":80,"column":25}},"42":{"start":{"line":82,"column":8},"end":{"line":82,"column":20}},"43":{"start":{"line":85,"column":8},"end":{"line":85,"column":54}},"44":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"45":{"start":{"line":89,"column":12},"end":{"line":89,"column":63}},"46":{"start":{"line":91,"column":8},"end":{"line":91,"column":49}},"47":{"start":{"line":92,"column":8},"end":{"line":92,"column":55}},"48":{"start":{"line":95,"column":8},"end":{"line":95,"column":42}},"49":{"start":{"line":98,"column":8},"end":{"line":98,"column":148}},"50":{"start":{"line":101,"column":0},"end":{"line":101,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":101},"end":{"line":18,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":12},"end":{"line":21,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":14},"end":{"line":24,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":21},"end":{"line":27,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":32},"end":{"line":34,"column":5}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":16},"end":{"line":37,"column":5}},"line":35},"6":{"name":"(anonymous_6)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":25},"end":{"line":44,"column":5}},"line":38},"7":{"name":"(anonymous_7)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":18},"end":{"line":50,"column":5}},"line":45},"8":{"name":"(anonymous_8)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":18},"end":{"line":54,"column":5}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":53,"column":17},"end":{"line":53,"column":18}},"loc":{"start":{"line":53,"column":26},"end":{"line":53,"column":39}},"line":53},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":13},"end":{"line":60,"column":5}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":16},"end":{"line":66,"column":5}},"line":61},"12":{"name":"(anonymous_12)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":62},"end":{"line":71,"column":5}},"line":68},"13":{"name":"(anonymous_13)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":40},"end":{"line":74,"column":5}},"line":72},"14":{"name":"(anonymous_14)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":53},"end":{"line":83,"column":5}},"line":76},"15":{"name":"(anonymous_15)","decl":{"start":{"line":78,"column":20},"end":{"line":78,"column":21}},"loc":{"start":{"line":78,"column":36},"end":{"line":78,"column":78}},"line":78},"16":{"name":"(anonymous_16)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":30},"end":{"line":86,"column":5}},"line":84},"17":{"name":"(anonymous_17)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":44},"end":{"line":93,"column":5}},"line":87},"18":{"name":"(anonymous_18)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":25},"end":{"line":96,"column":5}},"line":94},"19":{"name":"(anonymous_19)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":28},"end":{"line":99,"column":5}},"line":97}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":23},"end":{"line":8,"column":42}},"type":"default-arg","locations":[{"start":{"line":8,"column":38},"end":{"line":8,"column":42}}],"line":8},"1":{"loc":{"start":{"line":8,"column":44},"end":{"line":8,"column":58}},"type":"default-arg","locations":[{"start":{"line":8,"column":54},"end":{"line":8,"column":58}}],"line":8},"2":{"loc":{"start":{"line":8,"column":60},"end":{"line":8,"column":79}},"type":"default-arg","locations":[{"start":{"line":8,"column":75},"end":{"line":8,"column":79}}],"line":8},"3":{"loc":{"start":{"line":8,"column":81},"end":{"line":8,"column":99}},"type":"default-arg","locations":[{"start":{"line":8,"column":97},"end":{"line":8,"column":99}}],"line":8},"4":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15},"5":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"6":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"7":{"loc":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},{"start":{"line":46,"column":8},"end":{"line":48,"column":9}}],"line":46},"8":{"loc":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},{"start":{"line":56,"column":8},"end":{"line":58,"column":9}}],"line":56},"9":{"loc":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},{"start":{"line":62,"column":8},"end":{"line":64,"column":9}}],"line":62},"10":{"loc":{"start":{"line":69,"column":15},"end":{"line":70,"column":63}},"type":"binary-expr","locations":[{"start":{"line":69,"column":15},"end":{"line":69,"column":63}},{"start":{"line":70,"column":15},"end":{"line":70,"column":63}}],"line":69},"11":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":8},"end":{"line":81,"column":9}}],"line":79},"12":{"loc":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},{"start":{"line":88,"column":8},"end":{"line":90,"column":9}}],"line":88}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":4,"12":1,"13":12,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":3,"26":1,"27":2,"28":3,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1,"41":1,"42":0,"43":1,"44":1,"45":1,"46":0,"47":0,"48":1,"49":3,"50":1},"f":{"0":4,"1":12,"2":0,"3":0,"4":0,"5":0,"6":0,"7":3,"8":3,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":1,"18":1,"19":3},"b":{"0":[0],"1":[0],"2":[0],"3":[0],"4":[1,3],"5":[0,0],"6":[0,0],"7":[1,2],"8":[0,0],"9":[0,0],"10":[0,0],"11":[1,0],"12":[1,0]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/group/Group.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/group/Group.ts"],"names":[],"mappings":"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","sourcesContent":["import { v4 as uuid } from 'uuid';\n\nimport { ReturnCodes } from '../enums/return-codes.enum';\n\nimport { GroupProperties } from './GroupProperties';\n\n\nexport class Group {\n    private _id: string;\n\n    constructor(\n      private _name: string,\n      private _description: string = null,\n      private _imgUrl: URL = null,\n      private _parentGroup: Group = null,\n      private _childsGroups: Group[] = [],\n    ) {\n        this._id = uuid();\n        if(this._parentGroup){\n            this._parentGroup.addChild(this);\n        }\n    }\n\n    public getId(): string {\n        return this._id;\n    }\n\n    public getName(): string {\n        return this._name;\n    }\n\n    public getDescription(): string {\n        return this._description;\n    }\n\n    public setDescription(description: string): ReturnCodes {\n        if(!description) {\n            throw new Error('Invalid argument description: string');\n        }\n\n        this._description = description;\n        return ReturnCodes.UPDATED;\n    }\n\n    public getImgUrl(): URL {\n        return this._imgUrl;\n    }\n\n    public updateImgUrl(imgUrl: URL): ReturnCodes {\n        if(!imgUrl) {\n          throw new Error('Invalid argument imgUrl: URL');\n        }\n        this._imgUrl = imgUrl;\n        return ReturnCodes.UPDATED;\n    }\n\n\n    public getParentId(): string {\n        if(this._parentGroup) {\n            return this._parentGroup.getId();\n        }\n        return null;\n    }\n\n    public getChildsId(): string[] {\n        return this._childsGroups\n          .map(child => child.getId());\n    }\n\n    public isRoot(): boolean {\n        if(!this._parentGroup) {\n            return true;\n        }\n        return false;\n    }\n\n    public hasChilds(): boolean {\n        if(this._childsGroups.length === 0) {\n            return false;\n        }\n        return true;\n    }\n\n    // Here use static to replace missing friend of\n    private static _canShareSameParent(\n        inPlaceGroup: Group,\n        concurrentGroup: Group): boolean {\n        return inPlaceGroup._name === concurrentGroup.getName()\n          || inPlaceGroup.getId() === concurrentGroup.getId();\n    }\n\n    public canShareSameParent(concurrentGroup: Group) {\n        return Group._canShareSameParent(\n            this,\n            concurrentGroup);\n    }\n\n    // Here use static to replace missing friend of\n    private static _canOwnThisChild(existingChild: Group, newChild: Group): boolean {\n        const inPlaceConfictingChilds = existingChild._childsGroups\n          .filter(\n              inPlaceChild => !inPlaceChild.canShareSameParent(newChild)\n          );\n\n        if(inPlaceConfictingChilds.length >= 0 ) {\n          return false;\n        }\n        return true;\n    }\n\n    public canOwnThisChild(newChild: Group): boolean {\n        return Group._canOwnThisChild(\n            this,\n            newChild);\n    }\n\n    private static _addChild(parentGroup:Group , newChild: Group): ReturnCodes {\n        if(!parentGroup.canOwnThisChild(newChild)) {\n            return ReturnCodes.CONFLICTING;\n        }\n\n        parentGroup._childsGroups.push(newChild);\n        return ReturnCodes.UPDATED;\n    }\n\n    public addChild(childGroup: Group): void {\n        Group._addChild(this, childGroup);\n    }\n\n    public getReadableProperties(): GroupProperties {\n\n        return new GroupProperties(\n            this._id,\n            this.getChildsId(),\n            this._name, this._description,\n            this._imgUrl,\n            this.getParentId()\n            )\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b5d1b36285e0cae400b8d678c5344301dcdde718","contentHash":"17c01de5d03b395d602def814788429c3473cf120529e0659661d04ded908d68"},"/home/dauliac/Workspace/koleg/api/src/domain/group/GroupProperties.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/group/GroupProperties.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":21}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":35}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":25}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":39}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":29}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":43}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":73},"end":{"line":12,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":3,"6":3,"7":3,"8":1},"f":{"0":3},"b":{},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/group/GroupProperties.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/group/GroupProperties.ts"],"names":[],"mappings":";;;AAEA,MAAa,eAAe;IAExB,YACS,EAAU,EACV,SAAmB,EACnB,IAAY,EACZ,WAAmB,EACnB,MAAW,EACX,aAAqB;QALrB,OAAE,GAAF,EAAE,CAAQ;QACV,cAAS,GAAT,SAAS,CAAU;QACnB,SAAI,GAAJ,IAAI,CAAQ;QACZ,gBAAW,GAAX,WAAW,CAAQ;QACnB,WAAM,GAAN,MAAM,CAAK;QACX,kBAAa,GAAb,aAAa,CAAQ;IAC3B,CAAC;CACP;AAVD,0CAUC","sourcesContent":["import { Group } from \"./Group\";\n\nexport class GroupProperties {\n\n    constructor(\n    readonly id: string,\n    readonly groupsIds: string[],\n    readonly name: string,\n    readonly description: string,\n    readonly imgUrl: URL,\n    readonly parentGroupId: string\n    ) {}\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3c966da5568587239e87cbee4e3544f15515b990","contentHash":"4b6b2491e1b974d071d568bf4fb7b1a8f3753db615e18b5ebcde3c00036679e4"},"/home/dauliac/Workspace/koleg/api/src/domain/user/User.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/user/User.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":28},"end":{"line":6,"column":65}},"5":{"start":{"line":7,"column":23},"end":{"line":7,"column":48}},"6":{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":35}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":32}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":29}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":33}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":39}},"13":{"start":{"line":18,"column":8},"end":{"line":18,"column":28}},"14":{"start":{"line":19,"column":8},"end":{"line":19,"column":36}},"15":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"16":{"start":{"line":21,"column":12},"end":{"line":21,"column":68}},"17":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"18":{"start":{"line":24,"column":12},"end":{"line":24,"column":68}},"19":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"20":{"start":{"line":27,"column":12},"end":{"line":27,"column":69}},"21":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"22":{"start":{"line":30,"column":12},"end":{"line":30,"column":73}},"23":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"24":{"start":{"line":33,"column":12},"end":{"line":33,"column":35}},"25":{"start":{"line":35,"column":8},"end":{"line":35,"column":48}},"26":{"start":{"line":36,"column":8},"end":{"line":36,"column":48}},"27":{"start":{"line":37,"column":8},"end":{"line":37,"column":50}},"28":{"start":{"line":38,"column":8},"end":{"line":38,"column":62}},"29":{"start":{"line":39,"column":8},"end":{"line":39,"column":56}},"30":{"start":{"line":40,"column":8},"end":{"line":40,"column":50}},"31":{"start":{"line":41,"column":8},"end":{"line":41,"column":38}},"32":{"start":{"line":42,"column":8},"end":{"line":42,"column":54}},"33":{"start":{"line":43,"column":8},"end":{"line":43,"column":66}},"34":{"start":{"line":44,"column":8},"end":{"line":44,"column":44}},"35":{"start":{"line":45,"column":8},"end":{"line":45,"column":60}},"36":{"start":{"line":46,"column":8},"end":{"line":59,"column":9}},"37":{"start":{"line":47,"column":12},"end":{"line":47,"column":39}},"38":{"start":{"line":50,"column":12},"end":{"line":58,"column":13}},"39":{"start":{"line":51,"column":16},"end":{"line":51,"column":59}},"40":{"start":{"line":53,"column":17},"end":{"line":58,"column":13}},"41":{"start":{"line":55,"column":16},"end":{"line":55,"column":62}},"42":{"start":{"line":57,"column":16},"end":{"line":57,"column":76}},"43":{"start":{"line":60,"column":8},"end":{"line":60,"column":40}},"44":{"start":{"line":61,"column":8},"end":{"line":61,"column":46}},"45":{"start":{"line":65,"column":8},"end":{"line":65,"column":24}},"46":{"start":{"line":69,"column":8},"end":{"line":69,"column":34}},"47":{"start":{"line":73,"column":8},"end":{"line":73,"column":32}},"48":{"start":{"line":77,"column":8},"end":{"line":77,"column":30}},"49":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"50":{"start":{"line":81,"column":12},"end":{"line":81,"column":71}},"51":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"52":{"start":{"line":84,"column":12},"end":{"line":84,"column":64}},"53":{"start":{"line":86,"column":8},"end":{"line":86,"column":34}},"54":{"start":{"line":87,"column":8},"end":{"line":87,"column":23}},"55":{"start":{"line":88,"column":8},"end":{"line":88,"column":55}},"56":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"57":{"start":{"line":93,"column":12},"end":{"line":93,"column":67}},"58":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"59":{"start":{"line":96,"column":12},"end":{"line":96,"column":64}},"60":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"61":{"start":{"line":99,"column":12},"end":{"line":99,"column":68}},"62":{"start":{"line":101,"column":8},"end":{"line":101,"column":34}},"63":{"start":{"line":102,"column":8},"end":{"line":102,"column":51}},"64":{"start":{"line":103,"column":8},"end":{"line":103,"column":23}},"65":{"start":{"line":104,"column":8},"end":{"line":104,"column":55}},"66":{"start":{"line":107,"column":8},"end":{"line":107,"column":30}},"67":{"start":{"line":111,"column":8},"end":{"line":111,"column":31}},"68":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"69":{"start":{"line":115,"column":12},"end":{"line":115,"column":68}},"70":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"71":{"start":{"line":118,"column":12},"end":{"line":118,"column":79}},"72":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"73":{"start":{"line":121,"column":12},"end":{"line":121,"column":64}},"74":{"start":{"line":123,"column":8},"end":{"line":123,"column":39}},"75":{"start":{"line":124,"column":8},"end":{"line":124,"column":23}},"76":{"start":{"line":125,"column":8},"end":{"line":125,"column":55}},"77":{"start":{"line":129,"column":8},"end":{"line":129,"column":34}},"78":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"79":{"start":{"line":133,"column":12},"end":{"line":133,"column":70}},"80":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"81":{"start":{"line":136,"column":12},"end":{"line":136,"column":64}},"82":{"start":{"line":138,"column":25},"end":{"line":138,"column":64}},"83":{"start":{"line":139,"column":33},"end":{"line":139,"column":78}},"84":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"85":{"start":{"line":141,"column":12},"end":{"line":141,"column":68}},"86":{"start":{"line":143,"column":8},"end":{"line":143,"column":45}},"87":{"start":{"line":144,"column":8},"end":{"line":144,"column":23}},"88":{"start":{"line":145,"column":8},"end":{"line":145,"column":26}},"89":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"90":{"start":{"line":149,"column":12},"end":{"line":149,"column":69}},"91":{"start":{"line":151,"column":33},"end":{"line":151,"column":78}},"92":{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},"93":{"start":{"line":153,"column":12},"end":{"line":153,"column":59}},"94":{"start":{"line":154,"column":12},"end":{"line":154,"column":27}},"95":{"start":{"line":155,"column":12},"end":{"line":155,"column":59}},"96":{"start":{"line":157,"column":8},"end":{"line":157,"column":57}},"97":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"98":{"start":{"line":162,"column":12},"end":{"line":162,"column":64}},"99":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"100":{"start":{"line":165,"column":12},"end":{"line":165,"column":64}},"101":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"102":{"start":{"line":168,"column":12},"end":{"line":168,"column":67}},"103":{"start":{"line":170,"column":8},"end":{"line":170,"column":41}},"104":{"start":{"line":171,"column":8},"end":{"line":171,"column":55}},"105":{"start":{"line":174,"column":8},"end":{"line":174,"column":31}},"106":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"107":{"start":{"line":178,"column":12},"end":{"line":178,"column":64}},"108":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"109":{"start":{"line":181,"column":12},"end":{"line":181,"column":64}},"110":{"start":{"line":183,"column":27},"end":{"line":183,"column":59}},"111":{"start":{"line":184,"column":8},"end":{"line":187,"column":9}},"112":{"start":{"line":185,"column":12},"end":{"line":185,"column":47}},"113":{"start":{"line":186,"column":12},"end":{"line":186,"column":59}},"114":{"start":{"line":188,"column":8},"end":{"line":188,"column":57}},"115":{"start":{"line":192,"column":8},"end":{"line":192,"column":36}},"116":{"start":{"line":193,"column":8},"end":{"line":193,"column":55}},"117":{"start":{"line":197,"column":8},"end":{"line":197,"column":25}},"118":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"119":{"start":{"line":201,"column":12},"end":{"line":201,"column":57}},"120":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"121":{"start":{"line":204,"column":12},"end":{"line":204,"column":64}},"122":{"start":{"line":206,"column":8},"end":{"line":206,"column":24}},"123":{"start":{"line":207,"column":8},"end":{"line":207,"column":23}},"124":{"start":{"line":208,"column":8},"end":{"line":208,"column":55}},"125":{"start":{"line":212,"column":8},"end":{"line":212,"column":47}},"126":{"start":{"line":215,"column":25},"end":{"line":215,"column":72}},"127":{"start":{"line":219,"column":8},"end":{"line":223,"column":9}},"128":{"start":{"line":220,"column":12},"end":{"line":220,"column":65}},"129":{"start":{"line":221,"column":12},"end":{"line":221,"column":43}},"130":{"start":{"line":222,"column":12},"end":{"line":222,"column":27}},"131":{"start":{"line":224,"column":8},"end":{"line":224,"column":26}},"132":{"start":{"line":227,"column":25},"end":{"line":227,"column":72}},"133":{"start":{"line":228,"column":8},"end":{"line":232,"column":9}},"134":{"start":{"line":229,"column":12},"end":{"line":229,"column":65}},"135":{"start":{"line":230,"column":12},"end":{"line":230,"column":37}},"136":{"start":{"line":231,"column":12},"end":{"line":231,"column":27}},"137":{"start":{"line":233,"column":8},"end":{"line":233,"column":26}},"138":{"start":{"line":237,"column":8},"end":{"line":237,"column":39}},"139":{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},"140":{"start":{"line":241,"column":12},"end":{"line":241,"column":71}},"141":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"142":{"start":{"line":244,"column":12},"end":{"line":244,"column":64}},"143":{"start":{"line":246,"column":8},"end":{"line":246,"column":52}},"144":{"start":{"line":247,"column":8},"end":{"line":247,"column":23}},"145":{"start":{"line":248,"column":8},"end":{"line":248,"column":55}},"146":{"start":{"line":252,"column":8},"end":{"line":254,"column":9}},"147":{"start":{"line":253,"column":12},"end":{"line":253,"column":63}},"148":{"start":{"line":255,"column":8},"end":{"line":257,"column":9}},"149":{"start":{"line":256,"column":12},"end":{"line":256,"column":64}},"150":{"start":{"line":258,"column":25},"end":{"line":258,"column":64}},"151":{"start":{"line":259,"column":8},"end":{"line":261,"column":9}},"152":{"start":{"line":260,"column":12},"end":{"line":260,"column":65}},"153":{"start":{"line":262,"column":8},"end":{"line":262,"column":30}},"154":{"start":{"line":263,"column":8},"end":{"line":263,"column":23}},"155":{"start":{"line":264,"column":8},"end":{"line":264,"column":26}},"156":{"start":{"line":268,"column":8},"end":{"line":268,"column":73}},"157":{"start":{"line":271,"column":8},"end":{"line":274,"column":33}},"158":{"start":{"line":278,"column":26},"end":{"line":278,"column":73}},"159":{"start":{"line":279,"column":8},"end":{"line":280,"column":87}},"160":{"start":{"line":283,"column":8},"end":{"line":283,"column":297}},"161":{"start":{"line":287,"column":8},"end":{"line":287,"column":103}},"162":{"start":{"line":287,"column":62},"end":{"line":287,"column":101}},"163":{"start":{"line":290,"column":8},"end":{"line":290,"column":55}},"164":{"start":{"line":293,"column":8},"end":{"line":293,"column":38}},"165":{"start":{"line":297,"column":8},"end":{"line":298,"column":97}},"166":{"start":{"line":298,"column":48},"end":{"line":298,"column":95}},"167":{"start":{"line":301,"column":0},"end":{"line":301,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":31},"end":{"line":62,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":54,"column":22},"end":{"line":54,"column":23}},"loc":{"start":{"line":54,"column":34},"end":{"line":56,"column":13}},"line":54},"2":{"name":"(anonymous_2)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":12},"end":{"line":66,"column":5}},"line":64},"3":{"name":"(anonymous_3)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":22},"end":{"line":70,"column":5}},"line":68},"4":{"name":"(anonymous_4)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":20},"end":{"line":74,"column":5}},"line":72},"5":{"name":"(anonymous_5)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":18},"end":{"line":78,"column":5}},"line":76},"6":{"name":"(anonymous_6)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":29},"end":{"line":89,"column":5}},"line":79},"7":{"name":"(anonymous_7)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":29},"end":{"line":105,"column":5}},"line":91},"8":{"name":"(anonymous_8)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":18},"end":{"line":108,"column":5}},"line":106},"9":{"name":"(anonymous_9)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":19},"end":{"line":112,"column":5}},"line":110},"10":{"name":"(anonymous_10)","decl":{"start":{"line":113,"column":4},"end":{"line":113,"column":5}},"loc":{"start":{"line":113,"column":34},"end":{"line":126,"column":5}},"line":113},"11":{"name":"(anonymous_11)","decl":{"start":{"line":128,"column":4},"end":{"line":128,"column":5}},"loc":{"start":{"line":128,"column":21},"end":{"line":130,"column":5}},"line":128},"12":{"name":"(anonymous_12)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":32},"end":{"line":146,"column":5}},"line":131},"13":{"name":"(anonymous_13)","decl":{"start":{"line":147,"column":4},"end":{"line":147,"column":5}},"loc":{"start":{"line":147,"column":35},"end":{"line":158,"column":5}},"line":147},"14":{"name":"(anonymous_14)","decl":{"start":{"line":160,"column":4},"end":{"line":160,"column":5}},"loc":{"start":{"line":160,"column":25},"end":{"line":172,"column":5}},"line":160},"15":{"name":"(anonymous_15)","decl":{"start":{"line":173,"column":4},"end":{"line":173,"column":5}},"loc":{"start":{"line":173,"column":18},"end":{"line":175,"column":5}},"line":173},"16":{"name":"(anonymous_16)","decl":{"start":{"line":176,"column":4},"end":{"line":176,"column":5}},"loc":{"start":{"line":176,"column":25},"end":{"line":189,"column":5}},"line":176},"17":{"name":"(anonymous_17)","decl":{"start":{"line":190,"column":4},"end":{"line":190,"column":5}},"loc":{"start":{"line":190,"column":28},"end":{"line":194,"column":5}},"line":190},"18":{"name":"(anonymous_18)","decl":{"start":{"line":196,"column":4},"end":{"line":196,"column":5}},"loc":{"start":{"line":196,"column":13},"end":{"line":198,"column":5}},"line":196},"19":{"name":"(anonymous_19)","decl":{"start":{"line":199,"column":4},"end":{"line":199,"column":5}},"loc":{"start":{"line":199,"column":19},"end":{"line":209,"column":5}},"line":199},"20":{"name":"(anonymous_20)","decl":{"start":{"line":211,"column":4},"end":{"line":211,"column":5}},"loc":{"start":{"line":211,"column":17},"end":{"line":213,"column":5}},"line":211},"21":{"name":"(anonymous_21)","decl":{"start":{"line":214,"column":4},"end":{"line":214,"column":5}},"loc":{"start":{"line":214,"column":14},"end":{"line":225,"column":5}},"line":214},"22":{"name":"(anonymous_22)","decl":{"start":{"line":226,"column":4},"end":{"line":226,"column":5}},"loc":{"start":{"line":226,"column":13},"end":{"line":234,"column":5}},"line":226},"23":{"name":"(anonymous_23)","decl":{"start":{"line":236,"column":4},"end":{"line":236,"column":5}},"loc":{"start":{"line":236,"column":27},"end":{"line":238,"column":5}},"line":236},"24":{"name":"(anonymous_24)","decl":{"start":{"line":239,"column":4},"end":{"line":239,"column":5}},"loc":{"start":{"line":239,"column":47},"end":{"line":249,"column":5}},"line":239},"25":{"name":"(anonymous_25)","decl":{"start":{"line":251,"column":4},"end":{"line":251,"column":5}},"loc":{"start":{"line":251,"column":25},"end":{"line":265,"column":5}},"line":251},"26":{"name":"(anonymous_26)","decl":{"start":{"line":267,"column":4},"end":{"line":267,"column":5}},"loc":{"start":{"line":267,"column":16},"end":{"line":269,"column":5}},"line":267},"27":{"name":"(anonymous_27)","decl":{"start":{"line":270,"column":4},"end":{"line":270,"column":5}},"loc":{"start":{"line":270,"column":41},"end":{"line":275,"column":5}},"line":270},"28":{"name":"(anonymous_28)","decl":{"start":{"line":277,"column":4},"end":{"line":277,"column":5}},"loc":{"start":{"line":277,"column":28},"end":{"line":281,"column":5}},"line":277},"29":{"name":"(anonymous_29)","decl":{"start":{"line":282,"column":4},"end":{"line":282,"column":5}},"loc":{"start":{"line":282,"column":23},"end":{"line":284,"column":5}},"line":282},"30":{"name":"(anonymous_30)","decl":{"start":{"line":286,"column":4},"end":{"line":286,"column":5}},"loc":{"start":{"line":286,"column":38},"end":{"line":288,"column":5}},"line":286},"31":{"name":"(anonymous_31)","decl":{"start":{"line":287,"column":42},"end":{"line":287,"column":43}},"loc":{"start":{"line":287,"column":62},"end":{"line":287,"column":101}},"line":287},"32":{"name":"(anonymous_32)","decl":{"start":{"line":289,"column":4},"end":{"line":289,"column":5}},"loc":{"start":{"line":289,"column":18},"end":{"line":291,"column":5}},"line":289},"33":{"name":"(anonymous_33)","decl":{"start":{"line":292,"column":4},"end":{"line":292,"column":5}},"loc":{"start":{"line":292,"column":14},"end":{"line":294,"column":5}},"line":292},"34":{"name":"(anonymous_34)","decl":{"start":{"line":295,"column":4},"end":{"line":295,"column":5}},"loc":{"start":{"line":295,"column":45},"end":{"line":299,"column":5}},"line":295},"35":{"name":"(anonymous_35)","decl":{"start":{"line":298,"column":23},"end":{"line":298,"column":24}},"loc":{"start":{"line":298,"column":48},"end":{"line":298,"column":95}},"line":298}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"1":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"2":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"3":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"4":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}],"line":32},"5":{"loc":{"start":{"line":46,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":59,"column":9}},{"start":{"line":46,"column":8},"end":{"line":59,"column":9}}],"line":46},"6":{"loc":{"start":{"line":50,"column":12},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":58,"column":13}},{"start":{"line":50,"column":12},"end":{"line":58,"column":13}}],"line":50},"7":{"loc":{"start":{"line":53,"column":17},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":17},"end":{"line":58,"column":13}},{"start":{"line":53,"column":17},"end":{"line":58,"column":13}}],"line":53},"8":{"loc":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},{"start":{"line":80,"column":8},"end":{"line":82,"column":9}}],"line":80},"9":{"loc":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},{"start":{"line":83,"column":8},"end":{"line":85,"column":9}}],"line":83},"10":{"loc":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},{"start":{"line":92,"column":8},"end":{"line":94,"column":9}}],"line":92},"11":{"loc":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},{"start":{"line":95,"column":8},"end":{"line":97,"column":9}}],"line":95},"12":{"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},{"start":{"line":98,"column":8},"end":{"line":100,"column":9}}],"line":98},"13":{"loc":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},{"start":{"line":114,"column":8},"end":{"line":116,"column":9}}],"line":114},"14":{"loc":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},{"start":{"line":117,"column":8},"end":{"line":119,"column":9}}],"line":117},"15":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{"line":120,"column":8},"end":{"line":122,"column":9}}],"line":120},"16":{"loc":{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":134,"column":9}},{"start":{"line":132,"column":8},"end":{"line":134,"column":9}}],"line":132},"17":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{"line":135,"column":8},"end":{"line":137,"column":9}}],"line":135},"18":{"loc":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},{"start":{"line":140,"column":8},"end":{"line":142,"column":9}}],"line":140},"19":{"loc":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},{"start":{"line":148,"column":8},"end":{"line":150,"column":9}}],"line":148},"20":{"loc":{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},{"start":{"line":152,"column":8},"end":{"line":156,"column":9}}],"line":152},"21":{"loc":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},{"start":{"line":161,"column":8},"end":{"line":163,"column":9}}],"line":161},"22":{"loc":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},{"start":{"line":164,"column":8},"end":{"line":166,"column":9}}],"line":164},"23":{"loc":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},{"start":{"line":167,"column":8},"end":{"line":169,"column":9}}],"line":167},"24":{"loc":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},{"start":{"line":177,"column":8},"end":{"line":179,"column":9}}],"line":177},"25":{"loc":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"type":"if","locations":[{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},{"start":{"line":180,"column":8},"end":{"line":182,"column":9}}],"line":180},"26":{"loc":{"start":{"line":184,"column":8},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":187,"column":9}},{"start":{"line":184,"column":8},"end":{"line":187,"column":9}}],"line":184},"27":{"loc":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},{"start":{"line":200,"column":8},"end":{"line":202,"column":9}}],"line":200},"28":{"loc":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},{"start":{"line":203,"column":8},"end":{"line":205,"column":9}}],"line":203},"29":{"loc":{"start":{"line":219,"column":8},"end":{"line":223,"column":9}},"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":223,"column":9}},{"start":{"line":219,"column":8},"end":{"line":223,"column":9}}],"line":219},"30":{"loc":{"start":{"line":228,"column":8},"end":{"line":232,"column":9}},"type":"if","locations":[{"start":{"line":228,"column":8},"end":{"line":232,"column":9}},{"start":{"line":228,"column":8},"end":{"line":232,"column":9}}],"line":228},"31":{"loc":{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},{"start":{"line":240,"column":8},"end":{"line":242,"column":9}}],"line":240},"32":{"loc":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},{"start":{"line":243,"column":8},"end":{"line":245,"column":9}}],"line":243},"33":{"loc":{"start":{"line":252,"column":8},"end":{"line":254,"column":9}},"type":"if","locations":[{"start":{"line":252,"column":8},"end":{"line":254,"column":9}},{"start":{"line":252,"column":8},"end":{"line":254,"column":9}}],"line":252},"34":{"loc":{"start":{"line":255,"column":8},"end":{"line":257,"column":9}},"type":"if","locations":[{"start":{"line":255,"column":8},"end":{"line":257,"column":9}},{"start":{"line":255,"column":8},"end":{"line":257,"column":9}}],"line":255},"35":{"loc":{"start":{"line":259,"column":8},"end":{"line":261,"column":9}},"type":"if","locations":[{"start":{"line":259,"column":8},"end":{"line":261,"column":9}},{"start":{"line":259,"column":8},"end":{"line":261,"column":9}}],"line":259},"36":{"loc":{"start":{"line":268,"column":15},"end":{"line":268,"column":72}},"type":"binary-expr","locations":[{"start":{"line":268,"column":15},"end":{"line":268,"column":35}},{"start":{"line":268,"column":39},"end":{"line":268,"column":72}}],"line":268},"37":{"loc":{"start":{"line":271,"column":15},"end":{"line":274,"column":32}},"type":"binary-expr","locations":[{"start":{"line":271,"column":15},"end":{"line":271,"column":33}},{"start":{"line":272,"column":15},"end":{"line":272,"column":55}},{"start":{"line":273,"column":15},"end":{"line":273,"column":52}},{"start":{"line":274,"column":15},"end":{"line":274,"column":32}}],"line":271},"38":{"loc":{"start":{"line":290,"column":15},"end":{"line":290,"column":54}},"type":"binary-expr","locations":[{"start":{"line":290,"column":15},"end":{"line":290,"column":32}},{"start":{"line":290,"column":36},"end":{"line":290,"column":54}}],"line":290}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":2,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":1},"f":{"0":1,"1":0,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"0":[0,1],"1":[0,1],"2":[0,1],"3":[0,1],"4":[1,0],"5":[1,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0,0],"38":[0,0]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/user/User.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/user/User.ts"],"names":[],"mappings":";;;AAAA,+BAAkC;AAClC,+CAAwC;AAOxC,kEAAyD;AACzD,iDAA8C;AAC9C,mDAAgD;AAEhD,MAAa,IAAI;IAgBf,uDAAuD;IAEvD,YAAY,aAA4B;QAVhC,qBAAgB,GAAe,EAAE,CAAC;QAClC,kBAAa,GAAkB,EAAE,CAAC;QAClC,eAAU,GAAa,EAAE,CAAC;QAC1B,SAAI,GAAQ,IAAI,CAAC;QACjB,iBAAY,GAAS,IAAI,CAAC;QAC1B,uBAAkB,GAAQ,IAAI,CAAC;QAC/B,YAAO,GAAW,IAAI,CAAC;QACvB,oBAAe,GAAS,IAAI,CAAC;QAInC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;QACD,IAAI,aAAa,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;SAC9D;QAED,IAAG,CAAC,aAAa,CAAC,EAAE,EAAC;YACnB,IAAI,CAAC,GAAG,GAAG,SAAI,EAAE,CAAC;SACnB;QAED,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC,eAAe,CAAC;QACtD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,YAAY,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC,iBAAiB,CAAC;QAC1D,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC,cAAc,CAAC;QAEpD,IAAG,CAAC,aAAa,CAAC,eAAe,EAAE;YACjC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC5B;aAAM;YACL,IAAG,aAAa,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC5C;iBAAM,IAAG,aAAa,CAAC,eAAe;iBACpC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;YAC/C,CAAC,CACF,EAAE;gBACD,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;aAC7D;SACF;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;IACxC,CAAC;IAED,aAAa;IACN,KAAK;QACV,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,wBAAwB;IACjB,eAAe;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,sBAAsB;IACf,aAAa;QAClB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,mBAAmB;IACZ,WAAW;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,cAAc,CAAC,QAAsB;QAC1C,IAAI,CAAC,QAAQ,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACvB,OAAO,+BAAW,CAAC,YAAY,CAAC;SACjC;QAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,+BAAW,CAAC,OAAO,CAAC;IAC7B,CAAC;IAED,mBAAmB;IACZ,cAAc,CAAC,QAAkB;QACtC,IAAI,CAAC,QAAQ,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SACxD;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACvB,OAAO,+BAAW,CAAC,YAAY,CAAC;SACjC;QAED,IAAI,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,EAAE;YAC1C,OAAO,+BAAW,CAAC,gBAAgB,CAAC;SACrC;QAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,+BAAW,CAAC,OAAO,CAAC;IAC7B,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,oBAAoB;IACb,YAAY;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAGM,eAAe,CAAC,YAAkB;QACvC,IAAI,CAAC,YAAY,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SACzD;QAED,IAAI,YAAY,GAAG,IAAI,IAAI,EAAE,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;SACpE;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACvB,OAAO,+BAAW,CAAC,YAAY,CAAC;SACjC;QAED,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,+BAAW,CAAC,OAAO,CAAC;IAC7B,CAAC;IAED,sBAAsB;IACf,cAAc;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEM,cAAc,CAAC,WAAwB;QAC5C,IAAI,CAAC,WAAW,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACvB,OAAO,+BAAW,CAAC,YAAY,CAAC;SACjC;QAED,IAAI,UAAU,GAAgB,+BAAW,CAAC,OAAO,CAAC;QAElD,MAAM,gBAAgB,GAAG,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC;QAEvE,IAAI,gBAAgB,IAAI,CAAC,EAAE;YACzB,UAAU,GAAG,+BAAW,CAAC,UAAU,CAAC;SACrC;QAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,UAAU,CAAC;IACpB,CAAC;IAEM,iBAAiB,CAAC,WAAwB;QAC/C,IAAI,CAAC,WAAW,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;QAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC;QAEvE,IAAI,gBAAgB,IAAI,CAAC,EAAE;YACzB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO,+BAAW,CAAC,OAAO,CAAC;SAC5B;QAED,OAAO,+BAAW,CAAC,SAAS,CAAC;IAC/B,CAAC;IAED,iBAAiB;IACV,QAAQ,CAAC,UAAkB;QAChC,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACvB,OAAO,+BAAW,CAAC,YAAY,CAAC;SACjC;QAED,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACxC,OAAO,+BAAW,CAAC,eAAe,CAAC;SACpC;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACjC,OAAO,+BAAW,CAAC,OAAO,CAAC;IAC7B,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,OAAe;QAChC,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACvB,OAAO,+BAAW,CAAC,YAAY,CAAC;SACjC;QAED,MAAM,UAAU,GAAW,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5D,IAAI,UAAU,EAAE;YACd,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YACnC,OAAO,+BAAW,CAAC,OAAO,CAAC;SAC5B;QAED,OAAO,+BAAW,CAAC,SAAS,CAAC;IAC/B,CAAC;IAEM,YAAY,CAAC,SAAmB;QACrC,wBAAwB;QACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,OAAO,+BAAW,CAAC,OAAO,CAAC;IAC7B,CAAC;IAED,eAAe;IACR,MAAM;QACX,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEM,SAAS,CAAC,GAAQ;QACvB,IAAI,CAAC,GAAG,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACvB,OAAO,+BAAW,CAAC,YAAY,CAAC;SACjC;QAED,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,+BAAW,CAAC,OAAO,CAAC;IAC7B,CAAC;IAED,kBAAkB;IACX,UAAU;QACf,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,EAAE,CAAC;IACzC,CAAC;IAEM,OAAO;QACZ,IAAI,UAAU,GAAgB,+BAAW,CAAC,eAAe,CAAC;QAC1D,gCAAgC;QAChC,gDAAgD;QAChD,gDAAgD;QAChD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,UAAU,GAAG,+BAAW,CAAC,OAAO,CAAA;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;YAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAEM,MAAM;QACX,IAAI,UAAU,GAAgB,+BAAW,CAAC,eAAe,CAAC;QAE1D,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,UAAU,GAAG,+BAAW,CAAC,OAAO,CAAA;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,4BAA4B;IACrB,oBAAoB;QACzB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAEM,uBAAuB,CAAC,iBAAsB;QACnD,IAAI,CAAC,iBAAiB,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACvB,OAAO,+BAAW,CAAC,YAAY,CAAC;SACjC;QAED,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,+BAAW,CAAC,OAAO,CAAC;IAC7B,CAAC;IAED,iBAAiB;IACV,YAAY,CAAC,MAAc;QAChC,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACpD;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YACvB,OAAO,+BAAW,CAAC,YAAY,CAAC;SACjC;QAED,IAAI,UAAU,GAAgB,+BAAW,CAAC,OAAO,CAAC;QAClD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,UAAU,GAAG,+BAAW,CAAC,OAAO,CAAC;SAClC;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,qBAAqB;IACd,SAAS;QACd,OAAO,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,EAAE,CAAC;IACnE,CAAC;IAEM,QAAQ,CAAC,QAAgB,EAAE,gBAAwB;QACxD,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE;eACpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC;eACxC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC;eACrC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAED,oBAAoB;IACb,qBAAqB;QAC1B,MAAM,SAAS,GAAW,uBAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAE3D,OAAO,IAAI,2BAAY,CACrB,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,kBAAkB,EACvB,SAAS,EACT,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,UAAU,EAAE,2DAA2D;QAC5E,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,WAAW,CAAC,CAAC;IACtB,CAAC;IAEM,gBAAgB;QACrB,OAAO,IAAI,6BAAa,CACtB,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,eAAe,CACrB,CAAC;IACJ,CAAC;IAED,mBAAmB;IACX,uBAAuB,CAAC,QAAkB;QAChD,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACjG,CAAC;IAEO,WAAW;QACjB,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAA;IAChD,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;IAChC,CAAC;IAEO,2BAA2B,CAAC,WAAwB;QAE1D,0BAA0B;QAC1B,OAAO,IAAI,CAAC,aAAa;aACtB,SAAS,CAAC,qBAAqB,CAAC,EAAE,CAAC,WAAW,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACzF,CAAC;CACF;AAzYD,oBAyYC","sourcesContent":["import { v4 as uuid } from 'uuid';\nimport { deepCopy } from 'deep-copy-ts';\n\nimport { Job } from './Job';\nimport { Password } from './Password';\nimport { PhoneNumber } from './PhoneNumber';\nimport { SshKey } from './SshKey';\nimport { UserIdentity } from './UserIdentity';\nimport { ReturnCodes } from '../enums/return-codes.enum';\nimport { ReadableUser } from './ReadableUser';\nimport { StatelessUser } from './StatelessUser';\n\nexport class User {\n\n  private _id: string;\n  private _creationDate: Date\n  private _updateDate: Date;\n  private _identity: UserIdentity;\n  private _password: Password;\n  private _birthdate: Date;\n  private _passwordHistory: Password[] = [];\n  private _phoneNumbers: PhoneNumber[] = [];\n  private _groupsIds: string[] = [];\n  private _job: Job = null;\n  private _disableDate: Date = null;\n  private _profilePictureUrl: URL = null;\n  private _sshKey: SshKey = null;\n  private _expirationDate: Date = null;\n  // TODO: Add activation date, apply it into _isEditable\n\n  constructor(statelessUser: StatelessUser) {\n    if (!statelessUser.identity) {\n      throw new Error(`Invalid argument parameter, identity`);\n    }\n    if (!statelessUser.password) {\n      throw new Error(`Invalid argument parameter, password`);\n    }\n    if (!statelessUser.birthdate) {\n      throw new Error(`Invalid argument parameter, birthdate`);\n    }\n    if (statelessUser.birthdate > new Date()) {\n      throw new Error(`Negativ age, birthdate is into the future`);\n    }\n\n    if(!statelessUser.id){\n      this._id = uuid();\n    }\n\n    this._identity = statelessUser.identity;\n    this._password = statelessUser.password;\n    this._birthdate = statelessUser.birthdate;\n    this._passwordHistory = statelessUser.passwordHistory;\n    this._phoneNumbers = statelessUser.phoneNumbers;\n    this._groupsIds = statelessUser.groupsIds;\n    this._job = statelessUser.job;\n    this._disableDate = statelessUser.disableDate;\n    this._profilePictureUrl = statelessUser.profilePictureUrl;\n    this._sshKey = statelessUser.sshKey;\n    this._expirationDate = statelessUser.expirationDate;\n\n    if(!statelessUser.passwordHistory) {\n      this._passwordHistory = [];\n    } else {\n      if(statelessUser.passwordHistory.length === 0) {\n        this._passwordHistory.push(this._password);\n      } else if(statelessUser.passwordHistory\n        .some(password => {\n          password.hasSameValue(statelessUser.password)\n        }\n      )) {\n        throw new Error(`Your given password was not into history`);\n      }\n    }\n\n    this._creationDate = new Date();\n    this._updateDate = this._creationDate;\n  }\n\n  // Id =======\n  public getId(): string {\n    return this._id;\n  }\n\n  // Creation date =======\n  public getCreationDate(): Date {\n    return this._creationDate;\n  }\n\n  // Update date =======\n  public getUpdateDate(): Date {\n    return this._updateDate;\n  }\n\n  // Identity =======\n  public getIdentity(): UserIdentity {\n    return this._identity;\n  }\n\n  public updateIdentity(identity: UserIdentity): ReturnCodes {\n    if (!identity) {\n      throw new Error('Invalid argument identity: UserIdentity');\n    }\n\n    if (!this._isEditable()) {\n      return ReturnCodes.NOT_EDITABLE;\n    }\n\n    this._identity = identity;\n    this._update();\n    return ReturnCodes.UPDATED;\n  }\n\n  // Password =======\n  public updatePassword(password: Password): ReturnCodes {\n    if (!password) {\n      throw new Error('Invalid argument password: Password');\n    }\n\n    if (!this._isEditable()) {\n      return ReturnCodes.NOT_EDITABLE;\n    }\n\n    if (this._wasPasswordAlreadyUsed(password)) {\n      return ReturnCodes.WAS_ALREADY_USED;\n    }\n\n    this._password = password;\n    this._passwordHistory.push(this._password);\n    this._update();\n    return ReturnCodes.UPDATED;\n  }\n\n  public getPassword(): Password {\n    return this._password;\n  }\n\n  // BirthDate =======\n  public getBirthDate(): Date {\n    return this._birthdate;\n  }\n\n\n  public updateBirthDate(birthdayDate: Date): ReturnCodes {\n    if (!birthdayDate) {\n      throw new Error('Invalid argument birthdayDate: Date.');\n    }\n\n    if (birthdayDate > new Date()) {\n      throw new Error('Invalid argument you birthdayDate is in future.');\n    }\n\n    if (!this._isEditable()) {\n      return ReturnCodes.NOT_EDITABLE;\n    }\n\n    this._birthdate = birthdayDate;\n    this._update();\n    return ReturnCodes.UPDATED;\n  }\n\n  // PhoneNumber =======\n  public getPhoneNumber(): PhoneNumber[] {\n    return this._phoneNumbers;\n  }\n\n  public addPhoneNumber(phoneNumber: PhoneNumber): ReturnCodes {\n    if (!phoneNumber) {\n      throw new Error('Invalid argument phoneNumber: is null.');\n    }\n\n    if (!this._isEditable()) {\n      return ReturnCodes.NOT_EDITABLE;\n    }\n\n    let returnCode: ReturnCodes = ReturnCodes.CREATED;\n\n    const phoneNumberIndex = this._findPhoneNumberIndexInList(phoneNumber);\n\n    if (phoneNumberIndex >= 0) {\n      returnCode = ReturnCodes.DUPLICATED;\n    }\n\n    this._phoneNumbers.push(phoneNumber);\n    this._update();\n    return returnCode;\n  }\n\n  public removePhoneNumber(phoneNumber: PhoneNumber): ReturnCodes {\n    if (!phoneNumber) {\n      throw new Error('Invalid argument phoneNumber: is null');\n    }\n\n    const phoneNumberIndex = this._findPhoneNumberIndexInList(phoneNumber);\n\n    if (phoneNumberIndex >= 0) {\n      this._phoneNumbers.splice(phoneNumberIndex, 1);\n      this._update();\n      return ReturnCodes.REMOVED;\n    }\n\n    return ReturnCodes.NOT_FOUND;\n  }\n\n  // Groups =======\n  public addGroup(newGroupId: string): ReturnCodes {\n    if (!newGroupId) {\n      throw new Error('Invalid argument newGroup: Group');\n    }\n\n    if (!this._isEditable()) {\n      return ReturnCodes.NOT_EDITABLE;\n    }\n\n    if (this._groupsIds.includes(newGroupId)) {\n      return ReturnCodes.NOTHING_CHANGED;\n    }\n\n    this._groupsIds.push(newGroupId);\n    return ReturnCodes.UPDATED;\n  }\n\n  public getGroupIds(): string[] {\n    return this._groupsIds;\n  }\n\n  public removeGroup(groupId: string): ReturnCodes {\n    if (!groupId) {\n      throw new Error('Invalid argument newGroup: Group');\n    }\n\n    if (!this._isEditable()) {\n      return ReturnCodes.NOT_EDITABLE;\n    }\n\n    const groupIndex: number = this._groupsIds.indexOf(groupId);\n    if (groupIndex) {\n      delete this._groupsIds[groupIndex];\n      return ReturnCodes.REMOVED;\n    }\n\n    return ReturnCodes.NOT_FOUND;\n  }\n\n  public updateGroups(groupsIds: string[]): ReturnCodes {\n    // TODO deep equal tests\n    this._groupsIds = groupsIds;\n    return ReturnCodes.UPDATED;\n  }\n\n  // Jobs =======\n  public getJob(): Job {\n    return this._job;\n  }\n\n  public updateJob(job: Job): ReturnCodes {\n    if (!job) {\n      throw new Error('Invalid argument job: Job');\n    }\n\n    if (!this._isEditable()) {\n      return ReturnCodes.NOT_EDITABLE;\n    }\n\n    this._job = job;\n    this._update();\n    return ReturnCodes.UPDATED;\n  }\n\n  // Disable =======\n  public isDisabled(): boolean {\n    return this._disableDate <= new Date();\n  }\n\n  public disable(): number {\n    let returnCode: ReturnCodes = ReturnCodes.NOTHING_CHANGED;\n    // TODO: Edit expiration notion,\n    // It's might be redondant with disabling notion\n    // Can expiration be disableDate in the future ?\n    if (!this._disableDate) {\n      returnCode = ReturnCodes.UPDATED\n      this._disableDate = new Date();\n      this._update();\n    }\n    return returnCode;\n  }\n\n  public enable(): ReturnCodes {\n    let returnCode: ReturnCodes = ReturnCodes.NOTHING_CHANGED;\n\n    if (this._disableDate) {\n      returnCode = ReturnCodes.UPDATED\n      this._disableDate = null;\n      this._update();\n    }\n    return returnCode;\n  }\n\n  // ProfilePictureUrl =======\n  public getProfilePictureUrl(): URL {\n    return this._profilePictureUrl;\n  }\n\n  public updateProfilePictureUrl(profilePictureUrl: URL): ReturnCodes {\n    if (!profilePictureUrl) {\n      throw new Error('Invalid argument profilePictureUrl: URL');\n    }\n\n    if (!this._isEditable()) {\n      return ReturnCodes.NOT_EDITABLE;\n    }\n\n    this._profilePictureUrl = profilePictureUrl;\n    this._update();\n    return ReturnCodes.UPDATED;\n  }\n\n  // SshKey =======\n  public updateSshKey(sshKey: SshKey): ReturnCodes {\n    if (!sshKey) {\n      throw new Error('Invalid argument sshKay: SshKey');\n    }\n\n    if (!this._isEditable()) {\n      return ReturnCodes.NOT_EDITABLE;\n    }\n\n    let returnCode: ReturnCodes = ReturnCodes.UPDATED;\n    if (!this._sshKey) {\n      returnCode = ReturnCodes.CREATED;\n    }\n\n    this._sshKey = sshKey;\n    this._update();\n    return returnCode;\n  }\n\n  // Expiration =======\n  public isExpired(): boolean {\n    return this._expirationDate && this._expirationDate < new Date();\n  }\n\n  public canLogin(password: string, declinedIdentity: string): boolean {\n    return !this.isDisabled()\n      && this._identity.control(declinedIdentity)\n      && this._password.isValueValid(password)\n      && !this.isExpired();\n  }\n\n  // Exporting =======\n  public getReadableProperties(): ReadableUser {\n    const publicKey: string = deepCopy(this._sshKey.publicKey);\n\n    return new ReadableUser(\n      this._id,\n      this._identity,\n      this._job,\n      this._groupsIds,\n      this._profilePictureUrl,\n      publicKey,\n      this._phoneNumbers,\n      this._birthdate, // TODO: Do we need to deepCopy date to detatch from User ?\n      this._expirationDate,\n      this._creationDate,\n      this._disableDate,\n      this._updateDate);\n  }\n\n  public getStateLessUser(): StatelessUser {\n    return new StatelessUser(\n      this._id,\n      this._creationDate,\n      this._updateDate,\n      this._identity,\n      this._password,\n      this._birthdate,\n      this._passwordHistory,\n      this._phoneNumbers,\n      this._groupsIds,\n      this._job,\n      this._disableDate,\n      this._profilePictureUrl,\n      this._sshKey,\n      this._expirationDate\n    );\n  }\n\n  // Privates =======\n  private _wasPasswordAlreadyUsed(password: Password): boolean {\n    return this._passwordHistory.some(historicPassword => password.hasSameValue(historicPassword));\n  }\n\n  private _isEditable(): boolean {\n    return !this.isExpired() && !this.isDisabled()\n  }\n\n  private _update(): void {\n    this._updateDate = new Date();\n  }\n\n  private _findPhoneNumberIndexInList(phoneNumber: PhoneNumber): ReturnCodes {\n\n    // Return -1 for not found\n    return this._phoneNumbers\n      .findIndex(registeredPhoneNumber => phoneNumber.hasSameValue(registeredPhoneNumber));\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a06562467d40c576b2109f6b6b3837de73b88f71","contentHash":"3c28174c6a7dab3773dc0f4b2b9db2a4ab995dbad6b227cc1d041e2109daed32"},"/home/dauliac/Workspace/koleg/api/src/domain/user/ReadableUser.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/user/ReadableUser.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":23}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":35}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":25}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":37}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":53}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":43}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":43}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":47}},"13":{"start":{"line":18,"column":8},"end":{"line":18,"column":37}},"14":{"start":{"line":19,"column":8},"end":{"line":19,"column":43}},"15":{"start":{"line":20,"column":8},"end":{"line":20,"column":41}},"16":{"start":{"line":21,"column":8},"end":{"line":21,"column":39}},"17":{"start":{"line":24,"column":8},"end":{"line":24,"column":47}},"18":{"start":{"line":27,"column":8},"end":{"line":27,"column":24}},"19":{"start":{"line":30,"column":8},"end":{"line":30,"column":32}},"20":{"start":{"line":33,"column":8},"end":{"line":33,"column":30}},"21":{"start":{"line":36,"column":8},"end":{"line":36,"column":25}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":31}},"23":{"start":{"line":42,"column":8},"end":{"line":42,"column":39}},"24":{"start":{"line":45,"column":8},"end":{"line":45,"column":73}},"25":{"start":{"line":48,"column":8},"end":{"line":48,"column":34}},"26":{"start":{"line":51,"column":8},"end":{"line":51,"column":34}},"27":{"start":{"line":54,"column":8},"end":{"line":54,"column":34}},"28":{"start":{"line":57,"column":8},"end":{"line":57,"column":36}},"29":{"start":{"line":60,"column":8},"end":{"line":60,"column":33}},"30":{"start":{"line":63,"column":8},"end":{"line":63,"column":31}},"31":{"start":{"line":66,"column":8},"end":{"line":66,"column":47}},"32":{"start":{"line":69,"column":0},"end":{"line":69,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":192},"end":{"line":22,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":17},"end":{"line":25,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":12},"end":{"line":28,"column":5}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":20},"end":{"line":31,"column":5}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":18},"end":{"line":34,"column":5}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":13},"end":{"line":37,"column":5}},"line":35},"7":{"name":"(anonymous_7)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":18},"end":{"line":40,"column":5}},"line":38},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":27},"end":{"line":43,"column":5}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":16},"end":{"line":46,"column":5}},"line":44},"10":{"name":"(anonymous_10)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":22},"end":{"line":49,"column":5}},"line":47},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":22},"end":{"line":52,"column":5}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":22},"end":{"line":55,"column":5}},"line":53},"13":{"name":"(anonymous_13)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":24},"end":{"line":58,"column":5}},"line":56},"14":{"name":"(anonymous_14)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":21},"end":{"line":61,"column":5}},"line":59},"15":{"name":"(anonymous_15)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":19},"end":{"line":64,"column":5}},"line":62},"16":{"name":"(anonymous_16)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":16},"end":{"line":67,"column":5}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":9,"column":129},"end":{"line":9,"column":149}},"type":"default-arg","locations":[{"start":{"line":9,"column":145},"end":{"line":9,"column":149}}],"line":9},"4":{"loc":{"start":{"line":9,"column":151},"end":{"line":9,"column":170}},"type":"default-arg","locations":[{"start":{"line":9,"column":166},"end":{"line":9,"column":170}}],"line":9},"5":{"loc":{"start":{"line":9,"column":172},"end":{"line":9,"column":190}},"type":"default-arg","locations":[{"start":{"line":9,"column":186},"end":{"line":9,"column":190}}],"line":9},"6":{"loc":{"start":{"line":45,"column":15},"end":{"line":45,"column":72}},"type":"binary-expr","locations":[{"start":{"line":45,"column":15},"end":{"line":45,"column":35}},{"start":{"line":45,"column":39},"end":{"line":45,"column":72}}],"line":45}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0],"4":[0],"5":[0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/user/ReadableUser.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/user/ReadableUser.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAmC;AAMnC,MAAa,YAAY;IACvB,YACU,GAAW,EACX,SAAuB,EACvB,IAAS,EACT,UAAoB,EACpB,kBAAuB,EACvB,aAAqB,EACrB,aAA4B,EAC5B,eAAqB,EACrB,UAAgB,EAChB,gBAAsB,IAAI,EAC1B,eAAqB,IAAI,EACzB,cAAoB,IAAI;QAXxB,QAAG,GAAH,GAAG,CAAQ;QACX,cAAS,GAAT,SAAS,CAAc;QACvB,SAAI,GAAJ,IAAI,CAAK;QACT,eAAU,GAAV,UAAU,CAAU;QACpB,uBAAkB,GAAlB,kBAAkB,CAAK;QACvB,kBAAa,GAAb,aAAa,CAAQ;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAM;QACrB,eAAU,GAAV,UAAU,CAAM;QAChB,kBAAa,GAAb,aAAa,CAAa;QAC1B,iBAAY,GAAZ,YAAY,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;IAC/B,CAAC;IAEG,UAAU;QACf,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,EAAE,CAAC;IACzC,CAAC;IAEM,KAAK;QACV,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,MAAM;QACX,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAEM,oBAAoB;QACzB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,EAAE,CAAC;IACnE,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAEM,MAAM,CAAC,GAAY;QACxB,OAAO,oBAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC;CACF;AA3ED,oCA2EC","sourcesContent":["import deepEqual from 'deep-equal';\n\nimport { PhoneNumber } from './PhoneNumber';\nimport { UserIdentity } from './UserIdentity';\nimport { Job } from './Job';\n\nexport class ReadableUser {\n  constructor(\n    private _id: string,\n    private _identity: UserIdentity,\n    private _job: Job,\n    private _groupsIds: string[],\n    private _profilePictureUrl: URL,\n    private _sshPublicKey: string,\n    private _phoneNumbers: PhoneNumber[],\n    private _expirationDate: Date,\n    private _birthdate: Date,\n    private _creationDate: Date = null,\n    private _disableDate: Date = null,\n    private _updateDate: Date = null\n  ) {}\n\n  public isDisabled():boolean {\n    return this._disableDate <= new Date();\n  }\n\n  public getId(): string {\n    return this._id;\n  }\n\n  public getUpdateDate(): Date {\n    return this._updateDate;\n  }\n\n  public getIdentity(): UserIdentity {\n    return this._identity;\n  }\n\n  public getJob(): Job {\n    return this._job;\n  }\n\n  public getGroupIds(): string[] {\n    return this._groupsIds;\n  }\n\n  public getProfilePictureUrl(): URL {\n    return this._profilePictureUrl;\n  }\n\n  public isExpired(): boolean {\n    return this._expirationDate && this._expirationDate < new Date();\n  }\n\n  public getSshPublicKey(): string {\n    return this._sshPublicKey;\n  }\n\n  public getPhoneNumbers(): PhoneNumber[] {\n    return this._phoneNumbers;\n  }\n\n  public getCreationDate(): Date {\n    return this._creationDate;\n  }\n\n  public getExpirationDate(): Date {\n    return this._expirationDate;\n  }\n\n  public getDisableDate(): Date {\n    return this._disableDate;\n  }\n\n  public getBirthDate(): Date {\n    return this._birthdate;\n  }\n\n  public equals(obj: unknown): boolean {\n    return deepEqual(this, obj);\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"63aa965e9b2fc81aa22790dcdbd273070681b548","contentHash":"0d8f7387b13bd2230d7fbebd33d0e9630573ea24b4e54c5a5c63fca57e553834"},"/home/dauliac/Workspace/koleg/api/src/domain/user/StatelessUser.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/user/StatelessUser.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":21}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":41}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":37}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":33}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":33}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":35}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":47}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":41}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":35}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":51}},"14":{"start":{"line":18,"column":8},"end":{"line":18,"column":29}},"15":{"start":{"line":19,"column":8},"end":{"line":19,"column":45}},"16":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":180},"end":{"line":20,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/user/StatelessUser.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/user/StatelessUser.ts"],"names":[],"mappings":";;;AAMA,MAAa,aAAa;IACxB,YACkB,EAAU,EACV,YAAkB,EAClB,UAAgB,EAChB,QAAsB,EACtB,QAAkB,EAClB,SAAe,EACf,eAA4B,EAC5B,YAA4B,EAC5B,SAAoB,EACpB,GAAS,EACT,WAAkB,EAClB,iBAAuB,EACvB,MAAe,EACf,cAAqB;QAbrB,OAAE,GAAF,EAAE,CAAQ;QACV,iBAAY,GAAZ,YAAY,CAAM;QAClB,eAAU,GAAV,UAAU,CAAM;QAChB,aAAQ,GAAR,QAAQ,CAAc;QACtB,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAM;QACf,oBAAe,GAAf,eAAe,CAAa;QAC5B,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,cAAS,GAAT,SAAS,CAAW;QACpB,QAAG,GAAH,GAAG,CAAM;QACT,gBAAW,GAAX,WAAW,CAAO;QAClB,sBAAiB,GAAjB,iBAAiB,CAAM;QACvB,WAAM,GAAN,MAAM,CAAS;QACf,mBAAc,GAAd,cAAc,CAAO;IACpC,CAAC;CACL;AAjBD,sCAiBC","sourcesContent":["import { PhoneNumber } from './PhoneNumber';\nimport { UserIdentity } from './UserIdentity';\nimport { Job } from './Job';\nimport { Password } from './Password';\nimport { SshKey } from './SshKey';\n\nexport class StatelessUser {\n  constructor(\n    public readonly id: string,\n    public readonly creationDate: Date,\n    public readonly updateDate: Date,\n    public readonly identity: UserIdentity,\n    public readonly password: Password,\n    public readonly birthdate: Date,\n    public readonly passwordHistory?: Password[],\n    public readonly phoneNumbers?: PhoneNumber[],\n    public readonly groupsIds?: string[],\n    public readonly job?: Job,\n    public readonly disableDate?: Date,\n    public readonly profilePictureUrl?: URL,\n    public readonly sshKey?: SshKey,\n    public readonly expirationDate?: Date\n  ) {}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ae76e4ee3e58ffa2b51839cbcbbac4d672848936","contentHash":"aa47bf4e61eb02f33d1451ef5fbb9823a430287451a7bf9339af604a071be590"},"/home/dauliac/Workspace/koleg/api/src/domain/user/Job.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/user/Job.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":21}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":53}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"6":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"7":{"start":{"line":14,"column":12},"end":{"line":14,"column":61}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":26}},"9":{"start":{"line":21,"column":8},"end":{"line":26,"column":11}},"10":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"11":{"start":{"line":30,"column":12},"end":{"line":30,"column":25}},"12":{"start":{"line":32,"column":27},"end":{"line":32,"column":30}},"13":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"14":{"start":{"line":34,"column":12},"end":{"line":34,"column":24}},"15":{"start":{"line":36,"column":8},"end":{"line":36,"column":21}},"16":{"start":{"line":39,"column":0},"end":{"line":39,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":23},"end":{"line":16,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":14},"end":{"line":19,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":21},"end":{"line":27,"column":5}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":16},"end":{"line":37,"column":5}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13},"4":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"5":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{"line":33,"column":8},"end":{"line":35,"column":9}}],"line":33}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"f":{"0":1,"1":2,"2":0,"3":0,"4":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,2],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/user/Job.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/user/Job.ts"],"names":[],"mappings":";;;;;;AAAA,sDAA6C;AAE7C,2CAA2C;AAC3C,uBAAuB;AACvB,MAAa,GAAG;IAEZ,YACY,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QAErB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;SACpD;IACL,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,cAAc;QACjB,OAAO,iBAAO,CACV,IAAI,CAAC,OAAO,EAAE,EACd;YACI,WAAW,EAAE,GAAG;YAChB,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,mBAAmB;YAC3B,MAAM,EAAE,IAAI;SACf,CACJ,CAAC;IACN,CAAC;IAEM,MAAM,CAAC,GAAY;QACtB,IAAG,OAAM,CAAC,GAAG,CAAC,KAAK,OAAM,CAAC,IAAI,CAAC,EAAE;YAC7B,OAAO,KAAK,CAAA;SACf;QAED,MAAM,UAAU,GAAQ,GAAU,CAAC;QAEnC,IAAG,IAAI,CAAC,cAAc,EAAE,KAAK,UAAU,CAAC,cAAc,EAAE,EAAE;YACtD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AAtCD,kBAsCC","sourcesContent":["import { default as slugify } from 'slugify';\n\n// while this class don't have any methods,\n// It's will be useless\nexport class Job {\n\n    constructor(\n        private _name: string\n    ) {\n        if (!this._name) {\n            throw new Error('Invalid argument name: string');\n        }\n    }\n\n    public getName(): string {\n        return this._name;\n    }\n\n    public getSlugifyName(): string  {\n        return slugify(\n            this.getName(),\n            {\n                replacement: '.', // replace spaces with replacement character, defaults to `-`\n                lower: true,      // convert to lower case, defaults to `false`\n                remove: /[*+~.()'\"!:@?%$]/g, // Remove these chartes matching regex\n                strict: true,    // strip special characters except replacement, defaults to `false`\n            }\n        );\n    }\n\n    public equals(obj: unknown): boolean {\n        if(typeof(obj) !== typeof(this)) {\n            return false\n        }\n\n        const compareJob: Job = obj as Job;\n\n        if(this.getSlugifyName() === compareJob.getSlugifyName()) {\n            return true;\n        }\n        return false;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a31fbb2d2ead5aec231014b9ce5871358521195a","contentHash":"f1e718d9f551558f4d027c9ff3de84e972ad5c58dd0d8cef637786581b284470"},"/home/dauliac/Workspace/koleg/api/tests/domain/userIdentity.ts":{"path":"/home/dauliac/Workspace/koleg/api/tests/domain/userIdentity.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":68}},"3":{"start":{"line":5,"column":24},"end":{"line":7,"column":1}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":79}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":24},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":30},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/tests/domain/userIdentity.ts","sources":["/home/dauliac/Workspace/koleg/api/tests/domain/userIdentity.ts"],"names":[],"mappings":";;;AAAA,qEAAgE;AAEzD,MAAM,eAAe,GAAG,GAAiB,EAAE;IAC9C,OAAO,IAAI,2BAAY,CAAC,MAAM,EAAE,KAAK,EAAE,mBAAmB,CAAC,CAAC;AAChE,CAAC,CAAA;AAFY,QAAA,eAAe,mBAE3B","sourcesContent":["import {UserIdentity} from '../../src/domain/user/UserIdentity';\n\nexport const genUserIdentity = (): UserIdentity => {\n    return new UserIdentity(\"john\", \"doe\", \"john.doe@test.com\");\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"318709599d4abf8aa09b104bfa1672533f87d14e","contentHash":"b56d6525c50444eb78877d62a6a8ca207668537c1fb76490d14ddfa6e790cb9d"},"/home/dauliac/Workspace/koleg/api/src/domain/user/UserIdentity.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/user/UserIdentity.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":53}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":35}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":33}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":33}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":56}},"10":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"11":{"start":{"line":16,"column":12},"end":{"line":16,"column":66}},"12":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":65}},"14":{"start":{"line":21,"column":8},"end":{"line":29,"column":9}},"15":{"start":{"line":22,"column":12},"end":{"line":22,"column":66}},"16":{"start":{"line":25,"column":12},"end":{"line":28,"column":13}},"17":{"start":{"line":26,"column":16},"end":{"line":26,"column":41}},"18":{"start":{"line":27,"column":16},"end":{"line":27,"column":102}},"19":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"20":{"start":{"line":31,"column":12},"end":{"line":31,"column":69}},"21":{"start":{"line":35,"column":8},"end":{"line":35,"column":52}},"22":{"start":{"line":38,"column":8},"end":{"line":40,"column":47}},"23":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"24":{"start":{"line":44,"column":12},"end":{"line":44,"column":70}},"25":{"start":{"line":46,"column":8},"end":{"line":50,"column":11}},"26":{"start":{"line":53,"column":8},"end":{"line":53,"column":44}},"27":{"start":{"line":56,"column":0},"end":{"line":56,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":68},"end":{"line":33,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":18},"end":{"line":36,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":30},"end":{"line":41,"column":5}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":32},"end":{"line":51,"column":5}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":25},"end":{"line":54,"column":5}},"line":52}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":52}},"type":"default-arg","locations":[{"start":{"line":9,"column":48},"end":{"line":9,"column":52}}],"line":9},"4":{"loc":{"start":{"line":9,"column":54},"end":{"line":9,"column":66}},"type":"default-arg","locations":[{"start":{"line":9,"column":62},"end":{"line":9,"column":66}}],"line":9},"5":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15},"6":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"7":{"loc":{"start":{"line":21,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":29,"column":9}},{"start":{"line":21,"column":8},"end":{"line":29,"column":9}}],"line":21},"8":{"loc":{"start":{"line":25,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":28,"column":13}},{"start":{"line":25,"column":12},"end":{"line":28,"column":13}}],"line":25},"9":{"loc":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},{"start":{"line":30,"column":8},"end":{"line":32,"column":9}}],"line":30},"10":{"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":47}},"type":"binary-expr","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":17}},{"start":{"line":30,"column":21},"end":{"line":30,"column":47}}],"line":30},"11":{"loc":{"start":{"line":38,"column":15},"end":{"line":40,"column":46}},"type":"binary-expr","locations":[{"start":{"line":38,"column":15},"end":{"line":38,"column":54}},{"start":{"line":39,"column":15},"end":{"line":39,"column":49}},{"start":{"line":40,"column":15},"end":{"line":40,"column":46}}],"line":38},"12":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":0,"12":2,"13":0,"14":2,"15":0,"16":2,"17":0,"18":0,"19":2,"20":0,"21":0,"22":0,"23":2,"24":0,"25":2,"26":0,"27":1},"f":{"0":1,"1":2,"2":0,"3":0,"4":2,"5":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0],"4":[2],"5":[0,2],"6":[0,2],"7":[0,2],"8":[0,2],"9":[0,2],"10":[2,0],"11":[0,0,0],"12":[0,2]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/user/UserIdentity.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/user/UserIdentity.ts"],"names":[],"mappings":";;;;;;AAAA,sDAA6C;AAE7C,MAAa,YAAY;IAIrB,YACa,SAAiB,EACjB,QAAgB,EAChB,WAAmB,IAAI,EACvB,QAAgB,IAAI;QAHpB,cAAS,GAAT,SAAS,CAAQ;QACjB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,aAAQ,GAAR,QAAQ,CAAe;QACvB,UAAK,GAAL,KAAK,CAAe;QANhB,gBAAW,GAAG,4BAA4B,CAAC;QAQxD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;SACzD;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACxD;QAED,IAAI,CAAC,QAAQ,EAAE;YACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;SACzD;aAAM;YACH,IAAI,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;gBAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;gBACxB,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAA;aACxF;SACJ;QAED,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YACrC,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC5D;IACL,CAAC;IAEM,WAAW;QACd,OAAO,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;IAChD,CAAC;IAEM,OAAO,CAAC,gBAAwB;QACnC,OAAO,gBAAgB,KAAK,IAAI,CAAC,WAAW,EAAE;eACvC,gBAAgB,KAAK,IAAI,CAAC,QAAQ;eAClC,gBAAgB,KAAK,IAAI,CAAC,KAAK,CAAC;IAC3C,CAAC;IAEO,YAAY,CAAC,aAAqB;QACtC,IAAI,CAAC,aAAa,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAA;SAC5D;QAED,OAAO,iBAAO,CACV,aAAa,EACb;YACI,WAAW,EAAE,GAAG;YAChB,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,KAAK;SAChB,CACJ,CAAC;IACN,CAAC;IAEO,aAAa,CAAC,KAAa;QAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;CACJ;AA5DD,oCA4DC","sourcesContent":["import { default as slugify } from 'slugify';\n\nexport class UserIdentity {\n\n    private readonly EMAIL_REGEX = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    constructor(\n        readonly firstName: string,\n        readonly lastName: string,\n        readonly username: string = null,\n        readonly email: string = null\n    ) {\n        if (!this.firstName) {\n            throw new Error('Invalid argument firstname: string');\n        }\n\n        if (!this.lastName) {\n            throw new Error('Invalid argument lastname: string');\n        }\n\n        if (!username) {\n            this.username = this._getUsername(this.getFullName());\n        } else {\n            if (username !== this._getUsername(username)) {\n                this.username = username\n                throw new Error(\"Invalid argument username: don't respect this.usernameConstraint()\")\n            }\n        }\n\n        if (email && !this._isEmailValid(email)) {\n            throw new Error('Invalid argument email format: string');\n        }\n    }\n\n    public getFullName(): string {\n        return `${this.firstName} ${this.lastName}`;\n    }\n\n    public control(declinedIdentity: string): boolean {\n        return declinedIdentity === this.getFullName()\n            || declinedIdentity === this.username\n            || declinedIdentity === this.email;\n    }\n\n    private _getUsername(dirtyUsername: string): string {\n        if (!dirtyUsername) {\n            throw new Error('Invalid argument dirtyUsername: string')\n        }\n\n        return slugify(\n            dirtyUsername,\n            {\n                replacement: '.', // replace spaces with replacement character, defaults to `-`\n                lower: true,      // convert to lower case, defaults to `false`\n                strict: false,    // strip special characters except replacement, defaults to `false`\n            }\n        );\n    }\n\n    private _isEmailValid(email: string) { // Maybe should we export this to a Validator class ?\n        return this.EMAIL_REGEX.test(email);\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"836adb6bb5e8986f3b800bf3292231d1175716c0","contentHash":"c613812445fb7727dc733ec524b5a562930db72bc2433a3c24fe2f50d02641c4"},"/home/dauliac/Workspace/koleg/api/tests/domain/password.ts":{"path":"/home/dauliac/Workspace/koleg/api/tests/domain/password.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":60}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":61}},"6":{"start":{"line":9,"column":20},"end":{"line":14,"column":1}},"7":{"start":{"line":10,"column":27},"end":{"line":10,"column":55}},"8":{"start":{"line":11,"column":27},"end":{"line":11,"column":37}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":59}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":78}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":20},"end":{"line":9,"column":21}},"loc":{"start":{"line":9,"column":26},"end":{"line":14,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":2,"9":2,"10":2,"11":1},"f":{"0":1,"1":2},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/tests/domain/password.ts","sources":["/home/dauliac/Workspace/koleg/api/tests/domain/password.ts"],"names":[],"mappings":";;;;;;AAAA,6DAA0D;AAE1D,8DAAsC;AAE/B,MAAM,WAAW,GAAG,GAAa,EAAE;IACtC,MAAM,cAAc,GAAG,gBAAM,CAAC,UAAU,CAAC,CAAC;IAE1C,MAAM,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;IAClC,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAEvD,OAAO,IAAI,mBAAQ,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC;AACnE,CAAC,CAAC;AAPW,QAAA,WAAW,eAOtB","sourcesContent":["import { Password } from '../../src/domain/user/Password';\n\nimport sha256 from 'crypto-js/sha256';\n\nexport const genPassword = (): Password => {\n    const hashedPassword = sha256('P@ssw0rd');\n\n    const expirationDate = new Date();\n    expirationDate.setMonth(expirationDate.getMonth() + 8);\n\n    return new Password(hashedPassword.toString(), expirationDate);\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3e0e218b285fb986c09cc5fd3509c3652cfb549b","contentHash":"66b3928ca4e381ba3691b538c22e926a4c7c7a2bc48e545d636af8b71bf80d50"},"/home/dauliac/Workspace/koleg/api/src/domain/user/Password.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/user/Password.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":37}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"5":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"6":{"start":{"line":10,"column":12},"end":{"line":10,"column":63}},"7":{"start":{"line":12,"column":8},"end":{"line":19,"column":9}},"8":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"9":{"start":{"line":14,"column":16},"end":{"line":14,"column":82}},"10":{"start":{"line":18,"column":12},"end":{"line":18,"column":40}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":27}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":51}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":45}},"14":{"start":{"line":31,"column":8},"end":{"line":31,"column":65}},"15":{"start":{"line":34,"column":20},"end":{"line":34,"column":30}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":89}},"17":{"start":{"line":38,"column":0},"end":{"line":38,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":43},"end":{"line":20,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":15},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":27},"end":{"line":26,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":16},"end":{"line":29,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":31},"end":{"line":32,"column":5}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":27},"end":{"line":36,"column":5}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":24},"end":{"line":5,"column":41}},"type":"default-arg","locations":[{"start":{"line":5,"column":37},"end":{"line":5,"column":41}}],"line":5},"1":{"loc":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},{"start":{"line":9,"column":8},"end":{"line":11,"column":9}}],"line":9},"2":{"loc":{"start":{"line":12,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":19,"column":9}},{"start":{"line":12,"column":8},"end":{"line":19,"column":9}}],"line":12},"3":{"loc":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"type":"if","locations":[{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},{"start":{"line":13,"column":12},"end":{"line":15,"column":13}}],"line":13},"4":{"loc":{"start":{"line":31,"column":15},"end":{"line":31,"column":64}},"type":"binary-expr","locations":[{"start":{"line":31,"column":15},"end":{"line":31,"column":32}},{"start":{"line":31,"column":36},"end":{"line":31,"column":64}}],"line":31}},"s":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2,"6":0,"7":2,"8":2,"9":0,"10":0,"11":0,"12":0,"13":2,"14":0,"15":0,"16":0,"17":1},"f":{"0":2,"1":0,"2":0,"3":2,"4":0,"5":0},"b":{"0":[0],"1":[0,2],"2":[2,0],"3":[0,2],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/user/Password.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/user/Password.ts"],"names":[],"mappings":";;;AACA,MAAa,QAAQ;IAIjB,YACY,MAAc,EACd,aAAmB,IAAI;QADvB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAa;QAJlB,qBAAgB,GAAG,CAAC,CAAC;QAMlC,IAAI,CAAC,MAAM,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACtD;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;aACrE;SACJ;aAAM;YACH,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC/B;IACL,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEM,YAAY,CAAC,QAAkB;QAClC,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC/C,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,EAAE,CAAC;IACzC,CAAC;IAEM,YAAY,CAAC,YAAoB;QACpC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,YAAY,KAAK,IAAI,CAAC,MAAM,CAAC;IAC7D,CAAC;IAEO,oBAAoB;QACxB,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACrF,CAAC;CACJ;AAzCD,4BAyCC","sourcesContent":["\nexport class Password {\n\n    private readonly DATE_LIMIT_MONTH = 4;\n\n    constructor(\n        private _value: string,\n        private _dateLimit: Date = null\n    ) {\n        if (!_value) {\n            throw new Error('Invalid arguement value: string');\n        }\n\n        if (this._dateLimit) {\n            if (this.isExpired()) {\n                throw new Error('Invalid arguement dateLimit: cannot be in past');\n            }\n        } else {\n            this._initializeDateLimit();\n        }\n    }\n\n    public getValue(): string {\n        return this._value;\n    }\n\n    public hasSameValue(password: Password): boolean {\n        return this._value === password.getValue();\n    }\n\n    public isExpired(): boolean {\n        return this._dateLimit <= new Date();\n    }\n\n    public isValueValid(valueToCheck: string): boolean {\n        return !this.isExpired() && valueToCheck === this._value;\n    }\n\n    private _initializeDateLimit(): void {\n        const now = new Date();\n        this._dateLimit = new Date(now.setMonth(now.getMonth() + this.DATE_LIMIT_MONTH));\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"00cf2a53a56f3f2c0252c76367ea66c66e2f1f1b","contentHash":"fc33853a07b90f0608416b030563545de53b996a64dfcc28d2e86b1026307497"},"/home/dauliac/Workspace/koleg/api/tests/domain/phoneNumber.ts":{"path":"/home/dauliac/Workspace/koleg/api/tests/domain/phoneNumber.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":66}},"3":{"start":{"line":5,"column":26},"end":{"line":5,"column":75}},"4":{"start":{"line":6,"column":23},"end":{"line":8,"column":1}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":102}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":23},"end":{"line":6,"column":24}},"loc":{"start":{"line":6,"column":29},"end":{"line":8,"column":1}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/tests/domain/phoneNumber.ts","sources":["/home/dauliac/Workspace/koleg/api/tests/domain/phoneNumber.ts"],"names":[],"mappings":";;;AAAA,mEAAgE;AAChE,4EAAmE;AAE5D,MAAM,cAAc,GAAG,GAAgB,EAAE;IAC5C,OAAO,IAAI,yBAAW,CAAC,2BAAS,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;AACtE,CAAC,CAAA;AAFY,QAAA,cAAc,kBAE1B","sourcesContent":["import { PhoneNumber } from '../../src/domain/user/PhoneNumber';\nimport { PhoneType } from '../../src/domain/enums/phone-type.enum';\n\nexport const genPhoneNumber = (): PhoneNumber => {\n    return new PhoneNumber(PhoneType.PHONE_CELL_HOME, \"+33511931123\");\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ad4897ccb3bb1cf56a5646a25d6e9c7e38aca34d","contentHash":"f94b92487ff5cf9464d7fbf03254f81726c3257df2b754dceac6a1f6d0c648e4"},"/home/dauliac/Workspace/koleg/api/src/domain/user/PhoneNumber.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/user/PhoneNumber.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":25}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":80}},"5":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"6":{"start":{"line":10,"column":12},"end":{"line":10,"column":64}},"7":{"start":{"line":12,"column":8},"end":{"line":19,"column":9}},"8":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"9":{"start":{"line":14,"column":16},"end":{"line":14,"column":85}},"10":{"start":{"line":18,"column":12},"end":{"line":18,"column":62}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":48}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":51}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":29},"end":{"line":20,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":30},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":31},"end":{"line":26,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},{"start":{"line":9,"column":8},"end":{"line":11,"column":9}}],"line":9},"1":{"loc":{"start":{"line":12,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":19,"column":9}},{"start":{"line":12,"column":8},"end":{"line":19,"column":9}}],"line":12},"2":{"loc":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"type":"if","locations":[{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},{"start":{"line":13,"column":12},"end":{"line":15,"column":13}}],"line":13}},"s":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2,"6":0,"7":2,"8":2,"9":0,"10":0,"11":0,"12":2,"13":1},"f":{"0":2,"1":0,"2":2},"b":{"0":[0,2],"1":[2,0],"2":[0,2]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/user/PhoneNumber.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/user/PhoneNumber.ts"],"names":[],"mappings":";;;AAEA,MAAa,WAAW;IAIpB,YACa,IAAe,EACf,KAAa;QADb,SAAI,GAAJ,IAAI,CAAW;QACf,UAAK,GAAL,KAAK,CAAQ;QAJT,uBAAkB,GAAG,6CAA6C,CAAC;QAMhF,IAAI,CAAC,IAAI,EAAE;YACP,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACvD;QAED,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;gBAClC,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAA;aACvE;SACJ;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACrD;IACL,CAAC;IAEM,YAAY,CAAC,WAAwB;QACxC,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK,CAAC;IAC5C,CAAC;IAEO,mBAAmB,CAAC,KAAa;QACrC,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;CACJ;AA5BD,kCA4BC","sourcesContent":["import { PhoneType } from \"../enums/phone-type.enum\"\n\nexport class PhoneNumber {\n\n    private readonly PHONE_NUMBER_REGEX = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/;\n\n    constructor(\n        readonly type: PhoneType,\n        readonly value: string\n    ) {\n        if (!type) {\n            throw new Error('Invalid argument type: PhoneType');\n        }\n\n        if (this.value) {\n            if (!this._isPhoneNumberValid(value)) {\n                throw new Error(\"Invalid argument number: Don't respect constraint\")\n            }\n        } else {\n            throw new Error('Invalid argument value: string');\n        }\n    }\n\n    public hasSameValue(phoneNumber: PhoneNumber): boolean {\n        return this.value === phoneNumber.value;\n    }\n\n    private _isPhoneNumberValid(value: string): boolean {\n        return this.PHONE_NUMBER_REGEX.test(value);\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7acb54ea09bc95f9f3421a0655e880f8fe7378f2","contentHash":"a7bdf66c82b4eb73174a1775cc7c8a485044a4ae0dd7e432da0f402854b7e226"},"/home/dauliac/Workspace/koleg/api/src/domain/enums/phone-type.enum.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/enums/phone-type.enum.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":62}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":43}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":53}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":53}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":22},"end":{"line":10,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":60}},"type":"binary-expr","locations":[{"start":{"line":10,"column":15},"end":{"line":10,"column":32}},{"start":{"line":10,"column":37},"end":{"line":10,"column":59}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/enums/phone-type.enum.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/enums/phone-type.enum.ts"],"names":[],"mappings":";;;AAAA,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,sCAAyB,CAAA;IACzB,sCAAyB,CAAA;IACzB,gDAAmC,CAAA;IACnC,gDAAmC,CAAA;AACrC,CAAC,EALW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAKpB","sourcesContent":["export enum PhoneType {\n  PHONE_HOME = 'PHONE_HOME',\n  PHONE_WORK = 'PHONE_WORK',\n  PHONE_CELL_HOME = 'PHONE_CELL_HOME',\n  PHONE_CELL_WORK = 'PHONE_CELL_WORK'\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f5dee67f489969223ee0bc32c951eba727156b60","contentHash":"65e815ccdc13bf8cf3e049169bb77f3b6d32814355ee5c452ab19c79ff9a8a36"},"/home/dauliac/Workspace/koleg/api/tests/domain/sshKey.ts":{"path":"/home/dauliac/Workspace/koleg/api/tests/domain/sshKey.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":56}},"3":{"start":{"line":5,"column":18},"end":{"line":32,"column":1}},"4":{"start":{"line":6,"column":23},"end":{"line":22,"column":5}},"5":{"start":{"line":23,"column":22},"end":{"line":30,"column":5}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":54}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":18},"end":{"line":5,"column":19}},"loc":{"start":{"line":5,"column":24},"end":{"line":32,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":2,"7":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/tests/domain/sshKey.ts","sources":["/home/dauliac/Workspace/koleg/api/tests/domain/sshKey.ts"],"names":[],"mappings":";;;AAAA,yDAAsD;AAE/C,MAAM,SAAS,GAAG,GAAW,EAAE;IAClC,MAAM,UAAU,GAAG;;;;;;;;;;;;;;;;KAgBlB,CAAA;IAED,MAAM,SAAS,GAAG;;;;;;;KAOjB,CAAA;IAED,OAAO,IAAI,eAAM,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;AAC7C,CAAC,CAAA;AA7BY,QAAA,SAAS,aA6BrB","sourcesContent":["import { SshKey } from '../../src/domain/user/SshKey';\n\nexport const genSshKey = (): SshKey => {\n    const privateKey = `\n    -----BEGIN RSA PRIVATE KEY-----\n    MIICXgIBAAKBgQCYjiyDmRFQcPS9Wzj6ry4Rt1thmWbauCmXgkqMhMWkFZS9mi4m\n    OzoiENsb5qxF3apy0AbAmBidxwiIQR/PwKF1sqcE9cYo8twe9cskbrhuCXEfjoNl\n    S9mcAGwp1UK0FEDUnsQneHohwWAU4ZQsP9O26Z5rvJD4lCHNVkRzJVTm8wIDAQAB\n    AoGBAIzAUA2ywijHruauLaoMyqKJ24P29tDBrY4eJg3zyi4Tw0IT6JRZfM9FYgMi\n    Frv3QnXfvPsg2UVpB1Q/UcxqXAw8Jp3WuikpSTxZuAw3XCSeNNViNfmLBTq9Ih+A\n    fEvCUHa3ymI6vBPtYEP5ujB5tT2xMG58xblzpAREDdq0BR+hAkEA6HcMMDa1Hn9e\n    Ob+Yvizc4Cy6B0kPlBTj/oOxcakcqy+LtRlUi27Y4eMuaefkZ25uO4IB0J/vtp6O\n    vwuzBDoK2wJBAKgADchUSj9mL/GMy37JyW09GWrUkphvZoxDts806TizJ6sC1fPe\n    Hagmya+tQOkpoeasf9BNcLStA/Gr9ytGc8kCQQCt0jZ+5qlPgJWIQMeJjCosRcVk\n    JTFM3MIOUZKhFn6lUgv5AlPBXsU1QpY2Ans7C8vJG1EYGj84Ih9CoxDcnDn5AkB/\n    iUrtQc/7wT+0SAZUAiv/2dpp12ZSgn9/DAjD1I8YlCkREd4KfBxXgtqpmwUj/I8D\n    5wBAygk9n/rWhI3nNFzBAkEAqsvqaAjNUWCvHozpmf50LvH7WX4Jh9TPLk5G1yHD\n    C3jKDDFZko4uNUMBsaevlmiUeEzpniZ4goSiK18P0DCrdw==\n    -----END RSA PRIVATE KEY-----\n    `\n\n    const publicKey = `\n    -----BEGIN PUBLIC KEY-----\n    MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCYjiyDmRFQcPS9Wzj6ry4Rt1th\n    mWbauCmXgkqMhMWkFZS9mi4mOzoiENsb5qxF3apy0AbAmBidxwiIQR/PwKF1sqcE\n    9cYo8twe9cskbrhuCXEfjoNlS9mcAGwp1UK0FEDUnsQneHohwWAU4ZQsP9O26Z5r\n    vJD4lCHNVkRzJVTm8wIDAQAB\n    -----END PUBLIC KEY-----\n    `\n\n    return new SshKey(privateKey, publicKey);\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"30a595a1595bcfc6b7cc608bbb96fb1a9dda9de4","contentHash":"32187b08f25e2806a68f93b42ef46ec44d6c1f00d8f6a8e98737dd860befb2e2"},"/home/dauliac/Workspace/koleg/api/src/domain/user/SshKey.ts":{"path":"/home/dauliac/Workspace/koleg/api/src/domain/user/SshKey.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":37}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":35}},"4":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"5":{"start":{"line":9,"column":12},"end":{"line":9,"column":68}},"6":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":67}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":39},"end":{"line":14,"column":5}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},{"start":{"line":8,"column":8},"end":{"line":10,"column":9}}],"line":8},"1":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11}},"s":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":0,"6":2,"7":0,"8":1},"f":{"0":2},"b":{"0":[0,2],"1":[0,2]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/src/domain/user/SshKey.ts","sources":["/home/dauliac/Workspace/koleg/api/src/domain/user/SshKey.ts"],"names":[],"mappings":";;;AACA,MAAa,MAAM;IAEf,YACa,UAAkB,EAClB,SAAiB;QADjB,eAAU,GAAV,UAAU,CAAQ;QAClB,cAAS,GAAT,SAAS,CAAQ;QAE1B,IAAI,CAAC,UAAU,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAA;SAC1D;QAED,IAAI,CAAC,SAAS,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAA;SACzD;IACL,CAAC;CACJ;AAdD,wBAcC","sourcesContent":["\nexport class SshKey {\n\n    constructor(\n        readonly privateKey: string,\n        readonly publicKey: string\n    ) {\n        if (!privateKey) {\n            throw new Error('Invalid arguement privateKey: string')\n        }\n\n        if (!publicKey) {\n            throw new Error('Invalid arguement publicKey: string')\n        }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"047d5232bacccd03b5910eef04de447303a99819","contentHash":"cf54a0e7233410e78fe2aedac907abea43049176ad1624f29ac39145ff99b55b"},"/home/dauliac/Workspace/koleg/api/tests/domain/job.ts":{"path":"/home/dauliac/Workspace/koleg/api/tests/domain/job.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":15},"end":{"line":7,"column":1}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":39}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":15},"end":{"line":5,"column":16}},"loc":{"start":{"line":5,"column":21},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/tests/domain/job.ts","sources":["/home/dauliac/Workspace/koleg/api/tests/domain/job.ts"],"names":[],"mappings":";;;AAAA,mDAA8C;AAEvC,MAAM,MAAM,GAAG,GAAO,EAAE;IAC3B,OAAO,IAAI,SAAG,CAAC,YAAY,CAAC,CAAC;AACjC,CAAC,CAAA;AAFY,QAAA,MAAM,UAElB","sourcesContent":["import {Job} from '../../src/domain/user/Job';\n\nexport const genJob = ():Job => {\n    return new Job(\"Tester job\");\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f7c7b5ff0aae9b591a3145ca72967ddc1645fe5f","contentHash":"daba5fa436581c25f6977ce342597a4dc435559962c506631707a219a15eeb61"},"/home/dauliac/Workspace/koleg/api/tests/domain/group.ts":{"path":"/home/dauliac/Workspace/koleg/api/tests/domain/group.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":19},"end":{"line":10,"column":1}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":92}},"4":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"5":{"start":{"line":7,"column":8},"end":{"line":7,"column":88}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":69}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":19},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":59},"end":{"line":10,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":54}},"type":"default-arg","locations":[{"start":{"line":4,"column":50},"end":{"line":4,"column":54}}],"line":4},"1":{"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},{"start":{"line":6,"column":4},"end":{"line":8,"column":5}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":1,"6":3,"7":1},"f":{"0":4},"b":{"0":[3],"1":[1,3]},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/tests/domain/group.ts","sources":["/home/dauliac/Workspace/koleg/api/tests/domain/group.ts"],"names":[],"mappings":";;;AAEO,MAAM,UAAU,GAAG,CACtB,YAAyB,EACzB,gBAAwB,IAAI,EACtB,EAAE;IACR,MAAM,MAAM,GAAO,IAAI,GAAG,CAAC,gEAAgE,CAAC,CAAC;IAC7F,IAAG,aAAa,EAAC;QACb,OAAO,YAAY,CAAC,QAAQ,CAAC,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;KACnF;IACD,OAAO,YAAY,CAAC,QAAQ,CAAC,YAAY,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;AACrE,CAAC,CAAA;AATY,QAAA,UAAU,cAStB","sourcesContent":["import { Organisation } from '../../src/domain/organisation';\n\nexport const genGroupId = (\n    organisation:Organisation,\n    parentGroupId: string = null\n): string => {\n    const imgUrl:URL = new URL(\"https://live.staticflickr.com/2356/2343395980_e1274d24a1_b.jpg\");\n    if(parentGroupId){\n        return organisation.addGroup(\"Test group\", \"Test Group\", imgUrl, parentGroupId);\n    }\n    return organisation.addGroup(\"Test group\", \"Test Group\", imgUrl);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7ff5b456a2888e1898bc686229ba26dce95d051a","contentHash":"31ac83de0712aadcdf462e4e5ddd0cacd5121601647610ee0ffb4e69c66cce63"},"/home/dauliac/Workspace/koleg/api/tests/domain/user.ts":{"path":"/home/dauliac/Workspace/koleg/api/tests/domain/user.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":70}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":14},"end":{"line":6,"column":30}},"5":{"start":{"line":7,"column":19},"end":{"line":7,"column":40}},"6":{"start":{"line":8,"column":22},"end":{"line":8,"column":46}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":36}},"8":{"start":{"line":10,"column":23},"end":{"line":10,"column":48}},"9":{"start":{"line":11,"column":18},"end":{"line":24,"column":1}},"10":{"start":{"line":12,"column":21},"end":{"line":12,"column":53}},"11":{"start":{"line":13,"column":24},"end":{"line":13,"column":54}},"12":{"start":{"line":14,"column":35},"end":{"line":14,"column":59}},"13":{"start":{"line":15,"column":16},"end":{"line":15,"column":30}},"14":{"start":{"line":16,"column":19},"end":{"line":16,"column":39}},"15":{"start":{"line":17,"column":20},"end":{"line":17,"column":52}},"16":{"start":{"line":18,"column":21},"end":{"line":18,"column":30}},"17":{"start":{"line":19,"column":21},"end":{"line":19,"column":31}},"18":{"start":{"line":20,"column":4},"end":{"line":20,"column":47}},"19":{"start":{"line":21,"column":25},"end":{"line":21,"column":38}},"20":{"start":{"line":22,"column":26},"end":{"line":22,"column":182}},"21":{"start":{"line":23,"column":4},"end":{"line":23,"column":47}},"22":{"start":{"line":25,"column":0},"end":{"line":25,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":18},"end":{"line":11,"column":19}},"loc":{"start":{"line":11,"column":36},"end":{"line":24,"column":1}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/dauliac/Workspace/koleg/api/tests/domain/user.ts","sources":["/home/dauliac/Workspace/koleg/api/tests/domain/user.ts"],"names":[],"mappings":";;;AAKA,uEAAoE;AAEpE,mCAAqC;AACrC,+BAA+B;AAC/B,yCAAyC;AACzC,+CAA+C;AAC/C,qCAAqC;AACrC,iDAAiD;AAE1C,MAAM,SAAS,GAAG,CAAC,YAA0B,EAAU,EAAE;IAE5D,MAAM,QAAQ,GAAgB,8BAAe,EAAE,CAAC;IAChD,MAAM,WAAW,GAAgB,4BAAc,EAAE,CAAC;IAClD,MAAM,sBAAsB,GAAY,sBAAW,EAAE,CAAC;IACtD,MAAM,GAAG,GAAO,YAAM,EAAE,CAAC;IACzB,MAAM,MAAM,GAAU,kBAAS,EAAE,CAAC;IAClC,MAAM,OAAO,GAAG,kBAAU,CAAC,YAAY,CAAC,CAAC;IAEzC,MAAM,QAAQ,GAAa,CAAC,OAAO,CAAC,CAAC;IACrC,MAAM,QAAQ,GAAQ,IAAI,IAAI,EAAE,CAAC;IACjC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAE3C,MAAM,YAAY,GAAiB,CAAC,WAAW,CAAC,CAAC;IAEjD,MAAM,aAAa,GAAkB,IAAI,6BAAa,CAClD,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,QAAQ,EACR,sBAAsB,EACtB,QAAQ,EACR,IAAI,EACJ,YAAY,EACZ,QAAQ,EACR,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,MAAM,EACN,IAAI,CACP,CAAA;IAED,OAAO,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC/C,CAAC,CAAA;AAjCY,QAAA,SAAS,aAiCrB","sourcesContent":["import { Organisation } from '../../src/domain/organisation';\nimport { Job } from '../../src/domain/user/Job';\nimport { Password } from '../../src/domain/user/Password';\nimport { PhoneNumber } from '../../src/domain/user/PhoneNumber';\nimport { SshKey } from '../../src/domain/user/SshKey';\nimport { StatelessUser } from '../../src/domain/user/StatelessUser';\nimport { UserIdentity } from '../../src/domain/user/UserIdentity';\nimport { genGroupId } from './group';\nimport { genJob } from './job';\nimport { genPassword } from './password';\nimport { genPhoneNumber } from './phoneNumber';\nimport { genSshKey } from './sshKey';\nimport { genUserIdentity } from './userIdentity';\n\nexport const genUserId = (organisation: Organisation): string => {\n\n    const identity:UserIdentity = genUserIdentity();\n    const phoneNumber: PhoneNumber = genPhoneNumber();\n    const passwordWithExpiration:Password = genPassword();\n    const job:Job = genJob();\n    const sshKey:SshKey = genSshKey();\n    const groupId = genGroupId(organisation);\n\n    const groupsId: string[] = [groupId];\n    const birthDay:Date = new Date();\n    birthDay.setMonth(birthDay.getMonth() - 8);\n\n    const phoneNumbers:PhoneNumber[] = [phoneNumber];\n\n    const statelessUser: StatelessUser = new StatelessUser(\n        null,\n        null,\n        null,\n        identity,\n        passwordWithExpiration,\n        birthDay,\n        null,\n        phoneNumbers,\n        groupsId,\n        job,\n        null,\n        null,\n        sshKey,\n        null\n    )\n\n    return organisation.addUser(statelessUser);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bfce837272955ed6fb45fc8bc678d585f8ff4eb1","contentHash":"39f6c5295d84a51dd2a57af403177c9ad0c50a1bdaf646406aee55175b5c4dac"}}