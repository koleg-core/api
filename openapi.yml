{
   "components":{
      "schemas":{
         "PhoneNumberApiModel":{
            "properties":{
               "type":{
                  "enum":[
                     "PHONE_HOME",
                     "PHONE_WORK",
                     "PHONE_CELL_HOME",
                     "PHONE_CELL_WORK"
                  ],
                  "type":"string",
                  "not":{
                     "type":"null"
                  }
               },
               "value":{
                  "type":"string",
                  "not":{
                     "type":"null"
                  }
               }
            },
            "type":"object",
            "required":[
               "type",
               "value"
            ]
         },
         "JobApiModel":{
            "properties":{
               "name":{
                  "type":"string",
                  "not":{
                     "type":"null"
                  }
               }
            },
            "type":"object",
            "required":[
               "name"
            ]
         },
         "SshKeyApiModel":{
            "properties":{
               "privateKey":{
                  "type":"string",
                  "not":{
                     "type":"null"
                  }
               },
               "publicKey":{
                  "type":"string",
                  "not":{
                     "type":"null"
                  }
               }
            },
            "type":"object",
            "required":[
               "privateKey",
               "publicKey"
            ]
         },
         "PasswordApiModel":{
            "properties":{
               "value":{
                  "type":"string"
               },
               "dateLimit":{
                  "oneOf":[
                     {
                        "format":"date",
                        "type":"string"
                     },
                     {
                        "format":"date-time",
                        "type":"string"
                     }
                  ]
               }
            },
            "type":"object",
            "required":[
               "value"
            ]
         },
         "WritableUserApiModel":{
            "properties":{
               "id":{
                  "format":"uuid",
                  "type":"string"
               },
               "firstName":{
                  "type":"string"
               },
               "lastName":{
                  "type":"string"
               },
               "birthdate":{
                  "oneOf":[
                     {
                        "format":"date",
                        "type":"string"
                     },
                     {
                        "format":"date-time",
                        "type":"string"
                     }
                  ]
               },
               "email":{
                  "format":"email",
                  "type":"string"
               },
               "password":{
                  "$ref":"#/components/schemas/PasswordApiModel"
               },
               "groupIds":{
                  "format":"uuid",
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Array"
                  }
               },
               "phoneNumbers":{
                  "items":{
                     "$ref":"#/components/schemas/PhoneNumberApiModel"
                  },
                  "type":"array"
               },
               "username":{
                  "type":"string"
               },
               "profilePictureUrl":{
                  "format":"url",
                  "type":"string"
               },
               "job":{
                  "$ref":"#/components/schemas/JobApiModel"
               },
               "sshKey":{
                  "$ref":"#/components/schemas/SshKeyApiModel"
               },
               "expirationDate":{
                  "oneOf":[
                     {
                        "format":"date",
                        "type":"string"
                     },
                     {
                        "format":"date-time",
                        "type":"string"
                     }
                  ]
               },
               "disableDate":{
                  "oneOf":[
                     {
                        "format":"date",
                        "type":"string"
                     },
                     {
                        "format":"date-time",
                        "type":"string"
                     }
                  ]
               }
            },
            "type":"object"
         },
         "ReadableUserApiModel":{
            "properties":{
               "id":{
                  "format":"uuid",
                  "type":"string"
               },
               "firstName":{
                  "type":"string"
               },
               "lastName":{
                  "type":"string"
               },
               "username":{
                  "type":"string"
               },
               "birthdate":{
                  "oneOf":[
                     {
                        "format":"date",
                        "type":"string"
                     },
                     {
                        "format":"date-time",
                        "type":"string"
                     }
                  ]
               },
               "email":{
                  "format":"email",
                  "type":"string"
               },
               "profilePictureUrl":{
                  "format":"url",
                  "type":"string"
               },
               "phones":{
                  "items":{
                     "$ref":"#/components/schemas/PhoneNumberApiModel"
                  },
                  "type":"array"
               },
               "sshPublicKey":{
                  "type":"string"
               },
               "expirationDate":{
                  "oneOf":[
                     {
                        "format":"date",
                        "type":"string"
                     },
                     {
                        "format":"date-time",
                        "type":"string"
                     }
                  ]
               },
               "disableDate":{
                  "oneOf":[
                     {
                        "format":"date",
                        "type":"string"
                     },
                     {
                        "format":"date-time",
                        "type":"string"
                     }
                  ]
               },
               "updateDate":{
                  "oneOf":[
                     {
                        "format":"date",
                        "type":"string"
                     },
                     {
                        "format":"date-time",
                        "type":"string"
                     }
                  ]
               },
               "creationDate":{
                  "oneOf":[
                     {
                        "format":"date",
                        "type":"string"
                     },
                     {
                        "format":"date-time",
                        "type":"string"
                     }
                  ]
               }
            },
            "type":"object",
            "required":[
               "id",
               "firstName",
               "lastName",
               "username",
               "birthdate",
               "email",
               "profilePictureUrl",
               "phones",
               "sshPublicKey",
               "expirationDate",
               "disableDate",
               "updateDate",
               "creationDate"
            ]
         }
      },
      "securitySchemes":{
         "bearerAuth":{
            "type":"http",
            "scheme":"bearer",
            "bearerFormat":"JWT"
         }
      }
   },
   "info":{
      "title":"Koleg üë©‚Äçüíº",
      "version":"1.0.0",
      "description":"Koleg rest api",
      "license":{
         "name":"Apache 2.0",
         "url":"http://www.apache.org/licenses/LICENSE-2.0.html"
      }
   },
   "openapi":"3.0.0",
   "paths":{
      "/users":{
         "get":{
            "operationId":"UsersController.getAll",
            "parameters":[
               {
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "schema":{
                     "type":"number"
                  }
               },
               {
                  "in":"query",
                  "name":"itemsNumber",
                  "required":false,
                  "schema":{
                     "type":"number"
                  }
               }
            ],
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "items":{
                              "$ref":"#/components/schemas/ReadableUserApiModel"
                           },
                           "type":"array"
                        }
                     }
                  },
                  "description":"A list of users"
               }
            },
            "summary":"Get all",
            "tags":[
               "Users"
            ],
            "description":"Query all users using filter or not.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         },
         "post":{
            "operationId":"UsersController.post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/WritableUserApiModel"
                     }
                  }
               },
               "description":"WritableUserApiModel",
               "required":false
            },
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Response model with user id"
               },
               "201":{
                  "content":{
                     "application/json":{

                     }
                  },
                  "description":"Successful response"
               }
            },
            "summary":"Post",
            "tags":[
               "Users"
            ],
            "description":"Create new user."
         }
      },
      "/users/{id}":{
         "get":{
            "operationId":"UsersController.get",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Requested user"
               }
            },
            "summary":"Get",
            "tags":[
               "Users"
            ],
            "description":"Query user data using his id.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         },
         "put":{
            "operationId":"UsersController.put",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/WritableUserApiModel"
                     }
                  }
               },
               "description":"WritableUserApiModel",
               "required":false
            },
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Response "
               }
            },
            "summary":"Put",
            "tags":[
               "Users"
            ],
            "description":"Update user using his id.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         },
         "delete":{
            "operationId":"UsersController.remove",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Response "
               }
            },
            "summary":"Remove",
            "tags":[
               "Users"
            ],
            "description":"Remove user using his id.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         }
      },
      "/users/{id}/update-password":{
         "put":{
            "operationId":"UsersController.updatePassword",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "properties":{
                           "password":{
                              "type":"string"
                           }
                        },
                        "required":[

                        ],
                        "type":"object"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Response "
               },
               "202":{
                  "content":{
                     "application/json":{

                     }
                  },
                  "description":"Successful response"
               }
            },
            "summary":"Update password",
            "tags":[
               "Users"
            ],
            "description":"Update user password.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         }
      },
      "/users/{id}/upload_image":{
         "post":{
            "operationId":"UsersController.uploadImage",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Response "
               },
               "202":{
                  "content":{
                     "application/json":{

                     }
                  },
                  "description":"Successful response"
               }
            },
            "summary":"Upload image",
            "tags":[
               "Users"
            ],
            "description":"Upload new profile picture on s3.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         }
      },
      "/users/{id}/vcard":{
         "get":{
            "operationId":"UsersController.getVcardTemporaryUrl",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Response "
               }
            },
            "summary":"Get vcard temporary url",
            "tags":[
               "Users"
            ],
            "description":"Query temporary url from s3 that return user vcard.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         }
      },
      "/jobs":{
         "get":{
            "operationId":"JobsController.getAll",
            "parameters":[
               {
                  "in":"query",
                  "name":"filter",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"query",
                  "name":"page",
                  "required":false,
                  "schema":{
                     "type":"number"
                  }
               },
               {
                  "in":"query",
                  "name":"itemsNumber",
                  "required":false,
                  "schema":{
                     "type":"number"
                  }
               }
            ],
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "items":{
                              "$ref":"#/components/schemas/JobApiModel"
                           },
                           "type":"array"
                        }
                     }
                  },
                  "description":"A list of jobs"
               }
            },
            "summary":"Get all",
            "tags":[
               "Jobs"
            ],
            "description":"Query all jobs using filter or not.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         },
         "post":{
            "operationId":"JobsController.post",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/JobApiModel"
                     }
                  }
               },
               "description":"JobApiModel",
               "required":false
            },
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Response model with job id"
               }
            },
            "summary":"Post",
            "tags":[
               "Jobs"
            ],
            "description":"Create new job.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         }
      },
      "/jobs/{name}":{
         "get":{
            "operationId":"JobsController.get",
            "parameters":[
               {
                  "in":"path",
                  "name":"name",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Response of job query."
               }
            },
            "summary":"Get",
            "tags":[
               "Jobs"
            ],
            "description":"Request job using his id.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         },
         "delete":{
            "operationId":"JobsController.delete",
            "parameters":[
               {
                  "in":"path",
                  "name":"name",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Response of delete job query."
               }
            },
            "summary":"Delete",
            "tags":[
               "Jobs"
            ],
            "description":"Delete job using his name.",
            "security":[
               {
                  "bearerAuth":[

                  ]
               }
            ]
         }
      },
      "/auth/login":{
         "post":{
            "operationId":"AuthController.login",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{

                     }
                  }
               },
               "description":"",
               "required":false
            },
            "responses":{
               "200":{
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ResponseModel"
                        }
                     }
                  },
                  "description":"Response model with JWT."
               }
            },
            "summary":"Login",
            "tags":[
               "Auth"
            ],
            "description":"Try to login by requesting JWT"
         }
      }
   },
   "externalDocs":{
      "description":"Find out more about Swagger",
      "url":"https://gitlab.com/koleg1/api"
   },
   "servers":[
      {
         "url":"http://localhost:8080/",
         "description":"Local development server"
      },
      {
         "url":"https://api.dev.koleg.tk/",
         "description":"Development server"
      },
      {
         "url":"https://api.koleg.tk/",
         "description":"Production server"
      }
   ]
}
